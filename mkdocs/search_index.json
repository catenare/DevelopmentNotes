{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to Johan's Development Notes\n\n\nThings I discover in my work as a developer. Resources and notes that I tend to forget. Beyond a paper notebook, this is the repository of things I find out while working on my projects. In the least, it will keep me from having to rediscover \"the wheel\" when working on future projects.\n\n\n\n\nMy Website\n\n\n\n\nProject List\n\n\n\n\nSee \nGithub",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-johans-development-notes",
            "text": "Things I discover in my work as a developer. Resources and notes that I tend to forget. Beyond a paper notebook, this is the repository of things I find out while working on my projects. In the least, it will keep me from having to rediscover \"the wheel\" when working on future projects.   My Website",
            "title": "Welcome to Johan's Development Notes"
        },
        {
            "location": "/#project-list",
            "text": "See  Github",
            "title": "Project List"
        },
        {
            "location": "/database/",
            "text": "I nstalling Postgresql with macports\n\n\n/opt/local/lib/postgresql96/bin/pg_ctl -D /opt/local/var/db/postgresql96/defaultdb -l logfile start\n\n\npostgresql96 has the following notes:\n\n\n\n\nTo use the postgresql server, install the postgresql96-server port\n\n\npostgresql96-server has the following notes:\n\n\nTo create a database instance, after install do\n\n\nsudo mkdir -p /opt/local/var/db/postgresql96/defaultdb\n\n\nsudo chown postgres:postgres /opt/local/var/db/postgresql96/defaultdb\n\n\nsudo su postgres -c '/opt/local/lib/postgresql96/bin/initdb -D /opt/local/var/db/postgresql96/defaultdb'\n\n\nsudo mkdir -p /opt/local/var/db/postgresql96/defaultdb\n\n\nsudo chown postgres:postgres /opt/local/var/db/postgresql96/defaultdb\n\n\nsudo su postgres -c '/opt/local/lib/postgresql96/bin/initdb -D /opt/local/var/db/postgresql96/defaultdb'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsudo chmod -R 755 /opt/local/var/db/\n\n\nsudo defaults write /Library/LaunchDaemons/org.macports.postgresql96-server.plist Disabled -bool false\n\n\nsudo launchctl load /Library/LaunchDaemons/org.macports.postgresql96-server.plist\n\n\n\n\nsudo port load postgresql96-server\n\n\nsudo su - postgres\n\n\n/opt/local/lib/postgresql96/bin/psql -U postgres -d template1\n\n\n\n\nAllowing remote setup on Mac OS X installed via MacPorts\n\n\n\n\nConfig files are in \n/opt/local/var/db/postgresql96/defaultdb\n\n\nsudo su postgres\n to edit the files\n\n\nEdit pg_hba.conf - \nhost all all 192.168.1.0/24 trust\n to allow local network access\n\n\nEdit postgresq.conf - Under listen and settings - \nlisten_address = \"*\"\n will allow network access.\n\n\nsudo port unload postgresql96-server\n\n\nsudo port load postgresql96-server\n\n\nconfigure Mac OS X firewall to allow remote access\n\n\n\n\nOpen a port on Mac OS X\n\n\n\n\nOpen a port on mac os x\n\n\nEdit /etc/pf.conf\n\n\nAdd line \npass in proto tcp from any to any port 5432\n\n\nRestart firewall \nsudo pfctl -f /etc/pf.conf\n\n\n\n\nAccess database consistently\n\n\n\n\nCreate entry in \n/etc/hosts\n\n\nRemote entry \n192.168.1.103    paseodb\n\n\nLocal entry  \n127.0.0.1        db\n\n\nWill allow access without having to manually change settings everytime.\n\n\n\n\nMigrations\n\n\n\n\nSee \nMigrations\n\n\n\n\nSetup ODBC Driver for Postgresql on Mac OS X (Excel Compatible)\n \nNever got this to work\n\n\n\n\nInstall notes \nCompiling psqlODBC on unix\n\n\nInstall iODBC Manager from \niODBC.org\n\n\nInstall Mac Version\n\n\n\n\n\n\nDownload source from \nPostgresql ODBC Project\n\n\nUntar psqlodbc source\n\n\nBuild odbc driver\n\n\n./configure --with-iodbc=/usr/local/iODBC --enable-pthreads\n\n\nmake\n\n\n\n\n\n\nInstall driver to /usr/local/lib\n\n\nsudo make Install\n\n\nfiles: psqlodbcw.so & psqlodbcw.la\n\n\n\n\n\n\nCreate odbc.ini file in /etc/\n\n\nCreate \nodbc.ini\n and \nodbcinst.ini\n files in \n/Library/ODBC\n\n\nCopied \n/usr/local/lib/psqlodbcw.so\n and \n/usr/local/lib/psqlodbcw.la\n to \n/Library/ODBC/ODBCDataSources\n\n\nAllowed to load driver from excel.\n\n\n\n\n\n\n\n\nodbcinst.ini\n\n\n[PostgreSQL]\nDescription=ODBC For Postgresql\nDriver=/Library/ODBC/ODBCDataSources/psqlodbcw.so\n\n[ODBC]\nTrace=1\nDebug=1\n\n\n\n\nodbc.ini\n\n\n[ODBC Data Sources]\npgdata = PostgreSQL native driver\n\n[pgdata]\nDriver      = /usr/local/lib/psqlodbcw.so\nHost        = localhost\nServer      = localhost\nServerName  = localhost\nDatabase    = paseo\nUserName    = paseo\nPassword    = paseo\nPort        = 5432\nDebug       = 1\n\n[ODBC]\n;Trace=1\nDebug = 1\nDebugFile = /tmp/odbcdebug.log",
            "title": "Postgresql"
        },
        {
            "location": "/database/#i-nstalling-postgresql-with-macports",
            "text": "/opt/local/lib/postgresql96/bin/pg_ctl -D /opt/local/var/db/postgresql96/defaultdb -l logfile start",
            "title": "I nstalling Postgresql with macports"
        },
        {
            "location": "/database/#postgresql96-has-the-following-notes",
            "text": "To use the postgresql server, install the postgresql96-server port  postgresql96-server has the following notes:  To create a database instance, after install do  sudo mkdir -p /opt/local/var/db/postgresql96/defaultdb  sudo chown postgres:postgres /opt/local/var/db/postgresql96/defaultdb  sudo su postgres -c '/opt/local/lib/postgresql96/bin/initdb -D /opt/local/var/db/postgresql96/defaultdb'  sudo mkdir -p /opt/local/var/db/postgresql96/defaultdb  sudo chown postgres:postgres /opt/local/var/db/postgresql96/defaultdb  sudo su postgres -c '/opt/local/lib/postgresql96/bin/initdb -D /opt/local/var/db/postgresql96/defaultdb'         sudo chmod -R 755 /opt/local/var/db/  sudo defaults write /Library/LaunchDaemons/org.macports.postgresql96-server.plist Disabled -bool false  sudo launchctl load /Library/LaunchDaemons/org.macports.postgresql96-server.plist   sudo port load postgresql96-server  sudo su - postgres  /opt/local/lib/postgresql96/bin/psql -U postgres -d template1",
            "title": "postgresql96 has the following notes:"
        },
        {
            "location": "/database/#allowing-remote-setup-on-mac-os-x-installed-via-macports",
            "text": "Config files are in  /opt/local/var/db/postgresql96/defaultdb  sudo su postgres  to edit the files  Edit pg_hba.conf -  host all all 192.168.1.0/24 trust  to allow local network access  Edit postgresq.conf - Under listen and settings -  listen_address = \"*\"  will allow network access.  sudo port unload postgresql96-server  sudo port load postgresql96-server  configure Mac OS X firewall to allow remote access",
            "title": "Allowing remote setup on Mac OS X installed via MacPorts"
        },
        {
            "location": "/database/#open-a-port-on-mac-os-x",
            "text": "Open a port on mac os x  Edit /etc/pf.conf  Add line  pass in proto tcp from any to any port 5432  Restart firewall  sudo pfctl -f /etc/pf.conf",
            "title": "Open a port on Mac OS X"
        },
        {
            "location": "/database/#access-database-consistently",
            "text": "Create entry in  /etc/hosts  Remote entry  192.168.1.103    paseodb  Local entry   127.0.0.1        db  Will allow access without having to manually change settings everytime.",
            "title": "Access database consistently"
        },
        {
            "location": "/database/#migrations",
            "text": "See  Migrations",
            "title": "Migrations"
        },
        {
            "location": "/database/#setup-odbc-driver-for-postgresql-on-mac-os-x-excel-compatible-never-got-this-to-work",
            "text": "Install notes  Compiling psqlODBC on unix  Install iODBC Manager from  iODBC.org  Install Mac Version    Download source from  Postgresql ODBC Project  Untar psqlodbc source  Build odbc driver  ./configure --with-iodbc=/usr/local/iODBC --enable-pthreads  make    Install driver to /usr/local/lib  sudo make Install  files: psqlodbcw.so & psqlodbcw.la    Create odbc.ini file in /etc/  Create  odbc.ini  and  odbcinst.ini  files in  /Library/ODBC  Copied  /usr/local/lib/psqlodbcw.so  and  /usr/local/lib/psqlodbcw.la  to  /Library/ODBC/ODBCDataSources  Allowed to load driver from excel.     odbcinst.ini  [PostgreSQL]\nDescription=ODBC For Postgresql\nDriver=/Library/ODBC/ODBCDataSources/psqlodbcw.so\n\n[ODBC]\nTrace=1\nDebug=1  odbc.ini  [ODBC Data Sources]\npgdata = PostgreSQL native driver\n\n[pgdata]\nDriver      = /usr/local/lib/psqlodbcw.so\nHost        = localhost\nServer      = localhost\nServerName  = localhost\nDatabase    = paseo\nUserName    = paseo\nPassword    = paseo\nPort        = 5432\nDebug       = 1\n\n[ODBC]\n;Trace=1\nDebug = 1\nDebugFile = /tmp/odbcdebug.log",
            "title": "Setup ODBC Driver for Postgresql on Mac OS X (Excel Compatible) Never got this to work"
        },
        {
            "location": "/dbmigrations/",
            "text": "Database migrations with Flyway\n\n\nVersion control/management of updates\n\n\nUsing Flyway for database version control\n\n\n\n\nRecommendations:\n\n\nUse timestamp to tag migration. Makes it easier to manage especially if you're going to be in a multi-developer environment\n\n\nLessons Learned Using Flyway DB with Distributed Version Control\n\n\nGet date on mac os x command line \ndate +%s\n\n\n\n\n\n\nUse git to track migrations - flyway notices if a migration file changes and causes issues\n\n\n\n\nSetting up flyway\n\n\n\n\nSqlite jdbc driver - \nxerial/sqlite-jdbc\n - for prototyping\n\n\nPostgresql JDBC Driver - \nPostgresql\n\n\nFlyway ant library - \nFlyway Ant\n\n\nDirectory Structure\n\n\ndb\n\n\nconf/\n\n\nflyway.conf\n\n\nlibs/\n\n\nflyway/ # Flyway ant\n\n\npostgresql-9.4.1212.jar\n\n\nant-contrib-1.0b3.jar\n\n\nmigrations\n\n\nbuild.xml\n\n\n\n\n\n\nUsing the serial date for tracking migrations - \ndate +%s\n\n\n\n\nUsing ant to run migrations\n\n\n\n\nUsing SDKMAN to manage ant - \nsdkman\n | \nAnt\n\n\nAdded Ant contrib jar\n\n\nLibs used\n\n\nant-contrib-1.0b3.jar  -- ant contrib jar - (Ant contrib task)[http://central.maven.org/maven2/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar]\n\n\npostgresql-9.4.1212.jar -- \nPostgresql\n\n\nflyway - has the flyway core and ant libraries -- \nFlyway Ant\n\n\nbuild.xml in db library\n\n\n\n\nDeleting a migration.\n\n\nCan't delete a migration, only repair it.\n\n\n\n\nComment out the commands in the migration mistake you are eliminating.\n\n\nRun \nant repair\n to fix the checksums for the migrations\n\n\nValidate the current tatus \nant validate\n\n\nFlyway should be back to the status it is suppose to be in.",
            "title": "Migrations"
        },
        {
            "location": "/dbmigrations/#database-migrations-with-flyway",
            "text": "",
            "title": "Database migrations with Flyway"
        },
        {
            "location": "/dbmigrations/#version-controlmanagement-of-updates",
            "text": "",
            "title": "Version control/management of updates"
        },
        {
            "location": "/dbmigrations/#using-flyway-for-database-version-control",
            "text": "Recommendations:  Use timestamp to tag migration. Makes it easier to manage especially if you're going to be in a multi-developer environment  Lessons Learned Using Flyway DB with Distributed Version Control  Get date on mac os x command line  date +%s    Use git to track migrations - flyway notices if a migration file changes and causes issues",
            "title": "Using Flyway for database version control"
        },
        {
            "location": "/dbmigrations/#setting-up-flyway",
            "text": "Sqlite jdbc driver -  xerial/sqlite-jdbc  - for prototyping  Postgresql JDBC Driver -  Postgresql  Flyway ant library -  Flyway Ant  Directory Structure  db  conf/  flyway.conf  libs/  flyway/ # Flyway ant  postgresql-9.4.1212.jar  ant-contrib-1.0b3.jar  migrations  build.xml    Using the serial date for tracking migrations -  date +%s",
            "title": "Setting up flyway"
        },
        {
            "location": "/dbmigrations/#using-ant-to-run-migrations",
            "text": "Using SDKMAN to manage ant -  sdkman  |  Ant  Added Ant contrib jar  Libs used  ant-contrib-1.0b3.jar  -- ant contrib jar - (Ant contrib task)[http://central.maven.org/maven2/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar]  postgresql-9.4.1212.jar --  Postgresql  flyway - has the flyway core and ant libraries --  Flyway Ant  build.xml in db library",
            "title": "Using ant to run migrations"
        },
        {
            "location": "/dbmigrations/#deleting-a-migration",
            "text": "",
            "title": "Deleting a migration."
        },
        {
            "location": "/dbmigrations/#cant-delete-a-migration-only-repair-it",
            "text": "Comment out the commands in the migration mistake you are eliminating.  Run  ant repair  to fix the checksums for the migrations  Validate the current tatus  ant validate  Flyway should be back to the status it is suppose to be in.",
            "title": "Can't delete a migration, only repair it."
        },
        {
            "location": "/web/page/",
            "text": "Creating a basic page with webpack\n\n\nBasic setup for a basic web page.\n\n\n\n\nCreating a prototype with css and javascript\n - Using webpack and typescript\n\n\nConfigure \nproto\n project\n\n\n\n\nsrc/css\nsrc/js/index.js\nsrc/scss/style.scss\nsrc/index.html\npackage.json\nREADME.md\nwebpack.config.js\n.editorconfig\n.eslintignore\n.eslintrc\n\n\n\n\n\n\nCreate the \npackage.json\n page.\n\n\nnpm init\n \n\n\n\n\n{\n  \"name\": \"proto-demo\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Proto with marvel css\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"npm-run-all --parallel dev:server lint:watch\",\n    \"watch\": \"webpack -w -d\",\n    \"build\": \"webpack -p\",\n    \"dev:server\": \"webpack-dev-server --hot --inline --progress --colors\",\n    \"lint\": \"esw webpack.config.* src --color\",\n    \"lint:watch\": \"npm run lint -- --watch\"\n  },\n  \"author\": \"Johan Martin <martin.johan@johan-martin.com> (http://www.johan-martin.com/)\",\n  \"license\": \"ISC\",\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"babel-core\": \"^6.25.0\",\n    \"babel-loader\": \"^7.1.1\",\n    \"babel-preset-env\": \"^1.6.0\",\n    \"babel-preset-latest\": \"^6.24.1\",\n    \"clean-webpack-plugin\": \"^0.1.16\",\n    \"css-loader\": \"^0.28.4\",\n    \"eslint\": \"^4.3.0\",\n    \"eslint-watch\": \"^3.1.2\",\n    \"extract-text-webpack-plugin\": \"^3.0.0\",\n    \"html-webpack-plugin\": \"^2.29.0\",\n    \"node-sass\": \"^4.5.3\",\n    \"npm-run-all\": \"^4.0.2\",\n    \"sass-loader\": \"^6.0.6\",\n    \"style-loader\": \"^0.18.2\",\n    \"typescript\": \"^2.4.2\",\n    \"typescript-loader\": \"^1.1.3\",\n    \"webpack\": \"^3.4.1\",\n    \"webpack-dev-server\": \"^2.6.1\"\n  },\n  \"babel\": {\n    \"presets\": \"env\"\n  }\n}\n\n\n\n\n\n\n\nCreate \nwebpack.config.js\n.\n\n\n\n\nconst path = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CleanWebPackPlugin = require('clean-webpack-plugin');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\n\nmodule.exports = {\n    entry: './src/js/index.js',\n    output: {\n        path: path.resolve(__dirname + '/dist'),\n        filename: 'bundle.js',\n        pathinfo: true\n    },\n    plugins: [\n        new HtmlWebpackPlugin({\n            title: 'App Prototype with CSS and JS',\n            template: 'src/index.html',\n            filename: 'index.html'\n        }),\n        new CleanWebPackPlugin(['dist']),\n        new ExtractTextPlugin({\n            filename: 'styles.css',\n            allChunks: true\n        })\n    ],\n    module: {\n        rules: [\n            {\n                test: /\\.js$/,\n                exclude: /node_modules/,\n                use: 'babel-loader'\n            },\n            {\n                test: /\\.css$/,\n                use: [\n                    'style-loader',\n                    'css-loader'\n                ]\n            },\n            {\n                test: /\\.ts$/,\n                use: [\n                    'typescript-loader'\n                ]\n            },\n            {\n                test: /\\.scss$/,\n                use: ExtractTextPlugin.extract(['css-loader', 'sass-loader'])\n            }\n        ]\n    },\n    devServer: {\n        compress: true,\n        hot: true\n    }\n};\n\n\n\n\n\n\nCreate \n.editorconfig\n\n\n\n\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n\n\n\n\n\nCreate \n.eslintrc\n\n\n\n\n\"parserOptions\": {\n        \"ecmaVersion\": 6,\n        \"sourceType\": \"module\"\n    },\n    \"rules\": {\n        \"no-console\": \"off\",\n        \"indent\": [\n            2,\n            4\n        ],\n        \"linebreak-style\": [\n            2,\n            \"unix\"\n        ],\n        \"semi\": [\n            2,\n            \"always\"\n        ]\n    },\n    \"env\": {\n        \"es6\": true,\n        \"browser\": true,\n        \"node\": true,\n        \"mocha\": true\n    },\n    \"extends\": \"eslint:recommended\"\n}\n\n\n\n\n\n\nCreate \n.eslintignore\n - directories to ignore\n\n\n\n\ndist\n\n\n\n\nIncluding stylesheets\n\n\n\n\nImport stylesheets into javascript file\n\n\n\n\nimport '../scss/devices.scss';\nimport '../scss/style.scss';\n\nfunction select(s) {\n    return document.querySelector(s);\n}",
            "title": "Basic Setup"
        },
        {
            "location": "/web/page/#creating-a-basic-page-with-webpack",
            "text": "",
            "title": "Creating a basic page with webpack"
        },
        {
            "location": "/web/page/#basic-setup-for-a-basic-web-page",
            "text": "Creating a prototype with css and javascript  - Using webpack and typescript  Configure  proto  project   src/css\nsrc/js/index.js\nsrc/scss/style.scss\nsrc/index.html\npackage.json\nREADME.md\nwebpack.config.js\n.editorconfig\n.eslintignore\n.eslintrc   Create the  package.json  page.  npm init     {\n  \"name\": \"proto-demo\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Proto with marvel css\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"npm-run-all --parallel dev:server lint:watch\",\n    \"watch\": \"webpack -w -d\",\n    \"build\": \"webpack -p\",\n    \"dev:server\": \"webpack-dev-server --hot --inline --progress --colors\",\n    \"lint\": \"esw webpack.config.* src --color\",\n    \"lint:watch\": \"npm run lint -- --watch\"\n  },\n  \"author\": \"Johan Martin <martin.johan@johan-martin.com> (http://www.johan-martin.com/)\",\n  \"license\": \"ISC\",\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"babel-core\": \"^6.25.0\",\n    \"babel-loader\": \"^7.1.1\",\n    \"babel-preset-env\": \"^1.6.0\",\n    \"babel-preset-latest\": \"^6.24.1\",\n    \"clean-webpack-plugin\": \"^0.1.16\",\n    \"css-loader\": \"^0.28.4\",\n    \"eslint\": \"^4.3.0\",\n    \"eslint-watch\": \"^3.1.2\",\n    \"extract-text-webpack-plugin\": \"^3.0.0\",\n    \"html-webpack-plugin\": \"^2.29.0\",\n    \"node-sass\": \"^4.5.3\",\n    \"npm-run-all\": \"^4.0.2\",\n    \"sass-loader\": \"^6.0.6\",\n    \"style-loader\": \"^0.18.2\",\n    \"typescript\": \"^2.4.2\",\n    \"typescript-loader\": \"^1.1.3\",\n    \"webpack\": \"^3.4.1\",\n    \"webpack-dev-server\": \"^2.6.1\"\n  },\n  \"babel\": {\n    \"presets\": \"env\"\n  }\n}   Create  webpack.config.js .   const path = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CleanWebPackPlugin = require('clean-webpack-plugin');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\n\nmodule.exports = {\n    entry: './src/js/index.js',\n    output: {\n        path: path.resolve(__dirname + '/dist'),\n        filename: 'bundle.js',\n        pathinfo: true\n    },\n    plugins: [\n        new HtmlWebpackPlugin({\n            title: 'App Prototype with CSS and JS',\n            template: 'src/index.html',\n            filename: 'index.html'\n        }),\n        new CleanWebPackPlugin(['dist']),\n        new ExtractTextPlugin({\n            filename: 'styles.css',\n            allChunks: true\n        })\n    ],\n    module: {\n        rules: [\n            {\n                test: /\\.js$/,\n                exclude: /node_modules/,\n                use: 'babel-loader'\n            },\n            {\n                test: /\\.css$/,\n                use: [\n                    'style-loader',\n                    'css-loader'\n                ]\n            },\n            {\n                test: /\\.ts$/,\n                use: [\n                    'typescript-loader'\n                ]\n            },\n            {\n                test: /\\.scss$/,\n                use: ExtractTextPlugin.extract(['css-loader', 'sass-loader'])\n            }\n        ]\n    },\n    devServer: {\n        compress: true,\n        hot: true\n    }\n};   Create  .editorconfig   root = true\n\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true   Create  .eslintrc   \"parserOptions\": {\n        \"ecmaVersion\": 6,\n        \"sourceType\": \"module\"\n    },\n    \"rules\": {\n        \"no-console\": \"off\",\n        \"indent\": [\n            2,\n            4\n        ],\n        \"linebreak-style\": [\n            2,\n            \"unix\"\n        ],\n        \"semi\": [\n            2,\n            \"always\"\n        ]\n    },\n    \"env\": {\n        \"es6\": true,\n        \"browser\": true,\n        \"node\": true,\n        \"mocha\": true\n    },\n    \"extends\": \"eslint:recommended\"\n}   Create  .eslintignore  - directories to ignore   dist",
            "title": "Basic setup for a basic web page."
        },
        {
            "location": "/web/page/#including-stylesheets",
            "text": "Import stylesheets into javascript file   import '../scss/devices.scss';\nimport '../scss/style.scss';\n\nfunction select(s) {\n    return document.querySelector(s);\n}",
            "title": "Including stylesheets"
        },
        {
            "location": "/web/static/",
            "text": "Static Web Page Development\n\n\nSetting for static page development\n\n\n\n\nUsing \nfoundation from zurb\n\n\n\n\nInstallation - \nFoundation for Sites\n\n\n\n\nInstall foundation-cli - \nnpm install --global foundation-cli\n\n\nCreate new project -  \nfoundation new --framework sites --template zurb\n\n\nUse \nfoundation-zurb-template\n\n\n\n\n\n\nInstall building block - \nfoundation kits install news\n\n\nfoundation watch\n\n\n\n\nRevised instructions\n\n\n\n\nCommandline \nfoundation\n client will work with github version of site.\n\n\nCreated local fork of zurb foundation starter site - \nCatenare foundation fork\n\n\nPaseo\n is the branch I'm currently using\n\n\n\n\n\n\nClone repository\n\n\nCreate a new branch\n\n\nProfit\n\n\n\n\nResources\n\n\n\n\nPlacement Images List\n\n\nHold It\n\n\n\n\n\n\n\n\nNotes\n\n\nZurb Panini Notes\n\n\n\n\nPartials are your friends. \n\n\nInserting values into partions \n{{>partion value=\"value\"}}\n\n\nUse \n{{#each}}\n to iterate over array data\n\n\nUse \nfilename.variable\n to access data from file in data folder\n\n\n\n\n\n\n\n\nAdding font-awesome to your foundation site\n\n\nHowTo: Foundation 6 Font Awesome and other asset fonts\n\n\n \nbower install fontawesome --save\n\n\n Modify \nconfig.yml\n\n\n  assets:\n    - \"src/assets/**/*\"\n    - \"!src/assets/{img,js,scss,fonts}/**/*\"\n  fonts:\n    - \"src/assets/fonts/*\"\n    - \"bower_components/font-awesome/fonts/*\"\n  # Paths to Sass libraries, which can then be loaded with @import\n  sass:\n    - \"bower_components/foundation-sites/scss\"\n    - \"bower_components/motion-ui/src\"\n    - \"bower_components/font-awesome/scss\"\n\n\n\n\n\n\nModify \ngulpfile.babel.js\n\n\n\n\n// Build the \"dist\" folder by running all of the below tasks. Add fonts\ngulp.task('build',\n gulp.series(clean, gulp.parallel(pages, sass, javascript, images, fonts, copy), styleGuide));\n\n\n\n\n\n\nAdd\n\n\n\n\n// Copy fonts to the \"dist\" folder\nfunction fonts() {\n  return gulp.src(PATHS.fonts)\n    .pipe(gulp.dest(PATHS.dist + '/assets/fonts'));\n}\n\n\n\n\n\n\nModify\n\n\n\n\n// Watch for changes to static assets, pages, Sass, and JavaScript\nfunction watch() {\n  gulp.watch(PATHS.assets, copy);\n  gulp.watch('src/pages/**/*.html').on('all', gulp.series(pages, browser.reload));\n  gulp.watch('src/{layouts,partials}/**/*.html').on('all', gulp.series(resetPages, pages, browser.reload));\n  gulp.watch('src/assets/scss/**/*.scss').on('all', gulp.series(sass, browser.reload));\n  gulp.watch('src/assets/js/**/*.js').on('all', gulp.series(javascript, browser.reload));\n  gulp.watch('src/assets/img/**/*').on('all', gulp.series(images, browser.reload));\n  gulp.watch('src/assets/fonts/**/*').on('all', gulp.series(fonts, browser.reload));\n  gulp.watch('bower_components/font-awesome/fonts/*').on('all', gulp.series(fonts, browser.reload));\n  gulp.watch('src/styleguide/**').on('all', gulp.series(styleGuide, browser.reload));\n}\n\n\n\n\n\n\nModify \napp.css\n add\n\n\n\n\n@import \"font-awesome\";\n\n\n\n\n\n\nfoundation watch\n or \nnpm start\n\n\n\n\nWeb Development Tools - finding tools that are really useful for editing\n\n\nTools\n\n\nEmmet\n\n\n\n\nExpand html shortcuts\n\n\nCan really reduce the amount of typing necessary to to create a page.\n\n\n\n\nLocal static file server\n\n\n\n\nbrowser-sync\n\n\nNode.js tool \n\n\nbrowser-sync start --server --directory --files \"**/*\"\n\n\n\n\nCombine JS files\n\n\n\n\nRequirejs\n\n\nFor r.js to work (without explicit path) \nnpm install -g requirejs\n\n\n\n\nWeb Framework\n\n\n\n\nFoundation\n\n\nSetup a new project \nfoundation new\n\n\n\n\nSass Notes\n\n\n\n\nUsing sassc and libsass\n\n\nlibSass\n\n\nExport the library location so node-sass can use it.\n\n\n\n\nCompiling compass sass config.rb file\n\n\n\n\nCompiling compass sass with sass c library.\n\n\nsass --compass sass/styles.scss test,css\n - seems to read the compass config.rb file to find paths.\n\n\n\n\n\n\n\n\nMaintainable CSS\n\n\n\n\nBEM (block, element, modifier) methodology\n\n\n\n\nResources\n\n\n\n\nhttps://frontend.directory\n\n\n\n\nGenerating Color Palettes\n\n\n\n\nColors Palette Generator\n\n\nCanva Color Palette\n\n\nPictaculous",
            "title": "Static"
        },
        {
            "location": "/web/static/#static-web-page-development",
            "text": "",
            "title": "Static Web Page Development"
        },
        {
            "location": "/web/static/#setting-for-static-page-development",
            "text": "Using  foundation from zurb",
            "title": "Setting for static page development"
        },
        {
            "location": "/web/static/#installation-foundation-for-sites",
            "text": "Install foundation-cli -  npm install --global foundation-cli  Create new project -   foundation new --framework sites --template zurb  Use  foundation-zurb-template    Install building block -  foundation kits install news  foundation watch",
            "title": "Installation - Foundation for Sites"
        },
        {
            "location": "/web/static/#revised-instructions",
            "text": "Commandline  foundation  client will work with github version of site.  Created local fork of zurb foundation starter site -  Catenare foundation fork  Paseo  is the branch I'm currently using    Clone repository  Create a new branch  Profit",
            "title": "Revised instructions"
        },
        {
            "location": "/web/static/#resources",
            "text": "Placement Images List  Hold It",
            "title": "Resources"
        },
        {
            "location": "/web/static/#notes",
            "text": "",
            "title": "Notes"
        },
        {
            "location": "/web/static/#zurb-panini-notes",
            "text": "Partials are your friends.   Inserting values into partions  {{>partion value=\"value\"}}  Use  {{#each}}  to iterate over array data  Use  filename.variable  to access data from file in data folder",
            "title": "Zurb Panini Notes"
        },
        {
            "location": "/web/static/#adding-font-awesome-to-your-foundation-site",
            "text": "HowTo: Foundation 6 Font Awesome and other asset fonts    bower install fontawesome --save   Modify  config.yml    assets:\n    - \"src/assets/**/*\"\n    - \"!src/assets/{img,js,scss,fonts}/**/*\"\n  fonts:\n    - \"src/assets/fonts/*\"\n    - \"bower_components/font-awesome/fonts/*\"\n  # Paths to Sass libraries, which can then be loaded with @import\n  sass:\n    - \"bower_components/foundation-sites/scss\"\n    - \"bower_components/motion-ui/src\"\n    - \"bower_components/font-awesome/scss\"   Modify  gulpfile.babel.js   // Build the \"dist\" folder by running all of the below tasks. Add fonts\ngulp.task('build',\n gulp.series(clean, gulp.parallel(pages, sass, javascript, images, fonts, copy), styleGuide));   Add   // Copy fonts to the \"dist\" folder\nfunction fonts() {\n  return gulp.src(PATHS.fonts)\n    .pipe(gulp.dest(PATHS.dist + '/assets/fonts'));\n}   Modify   // Watch for changes to static assets, pages, Sass, and JavaScript\nfunction watch() {\n  gulp.watch(PATHS.assets, copy);\n  gulp.watch('src/pages/**/*.html').on('all', gulp.series(pages, browser.reload));\n  gulp.watch('src/{layouts,partials}/**/*.html').on('all', gulp.series(resetPages, pages, browser.reload));\n  gulp.watch('src/assets/scss/**/*.scss').on('all', gulp.series(sass, browser.reload));\n  gulp.watch('src/assets/js/**/*.js').on('all', gulp.series(javascript, browser.reload));\n  gulp.watch('src/assets/img/**/*').on('all', gulp.series(images, browser.reload));\n  gulp.watch('src/assets/fonts/**/*').on('all', gulp.series(fonts, browser.reload));\n  gulp.watch('bower_components/font-awesome/fonts/*').on('all', gulp.series(fonts, browser.reload));\n  gulp.watch('src/styleguide/**').on('all', gulp.series(styleGuide, browser.reload));\n}   Modify  app.css  add   @import \"font-awesome\";   foundation watch  or  npm start",
            "title": "Adding font-awesome to your foundation site"
        },
        {
            "location": "/web/static/#web-development-tools-finding-tools-that-are-really-useful-for-editing",
            "text": "",
            "title": "Web Development Tools - finding tools that are really useful for editing"
        },
        {
            "location": "/web/static/#tools",
            "text": "",
            "title": "Tools"
        },
        {
            "location": "/web/static/#emmet",
            "text": "Expand html shortcuts  Can really reduce the amount of typing necessary to to create a page.",
            "title": "Emmet"
        },
        {
            "location": "/web/static/#local-static-file-server",
            "text": "browser-sync  Node.js tool   browser-sync start --server --directory --files \"**/*\"",
            "title": "Local static file server"
        },
        {
            "location": "/web/static/#combine-js-files",
            "text": "Requirejs  For r.js to work (without explicit path)  npm install -g requirejs",
            "title": "Combine JS files"
        },
        {
            "location": "/web/static/#web-framework",
            "text": "Foundation  Setup a new project  foundation new",
            "title": "Web Framework"
        },
        {
            "location": "/web/static/#sass-notes",
            "text": "Using sassc and libsass  libSass  Export the library location so node-sass can use it.",
            "title": "Sass Notes"
        },
        {
            "location": "/web/static/#compiling-compass-sass-configrb-file",
            "text": "Compiling compass sass with sass c library.  sass --compass sass/styles.scss test,css  - seems to read the compass config.rb file to find paths.",
            "title": "Compiling compass sass config.rb file"
        },
        {
            "location": "/web/static/#maintainable-css",
            "text": "BEM (block, element, modifier) methodology",
            "title": "Maintainable CSS"
        },
        {
            "location": "/web/static/#resources_1",
            "text": "https://frontend.directory",
            "title": "Resources"
        },
        {
            "location": "/web/static/#generating-color-palettes",
            "text": "Colors Palette Generator  Canva Color Palette  Pictaculous",
            "title": "Generating Color Palettes"
        },
        {
            "location": "/web/front/",
            "text": "Web Development Tools - finding tools that are really useful for editing\n\n\nResources\n\n\n\n\nhttps://frontend.directory\n\n\n\n\nWeb Framework\n\n\n\n\nFoundation\n\n\nSetup a new project \nfoundation new\n\n\n\n\n\n\nuikit\n\n\n\n\nTemplates\n\n\n\n\nCoreUI\n - Admin template\n\n\nflakes\n - Design and frontend framework for dashboard.\n\n\n\n\nTools\n\n\nHTML tools\n\n\n\n\nEmmet\n \n\n\nExpand html shortcuts\n\n\nCan really reduce the amount of typing necessary to to create a page.\n\n\n\n\n\n\n\n\nImage Sources\n\n\n\n\nPlacement Images List\n\n\nHold It\n\n\n\n\nPrototype tools\n\n\n\n\nRandom User Generator\n - get list of users.\n\n\nUIFaces\n - Faces for user interfaces\n\n\nCSS Flat Mobile Devices\n - Prototype devices in css.\n\n\nLists\n - Content for prototyping\n\n\n\n\nLocal static file server\n\n\n\n\nbrowser-sync\n\n\nNode.js tool \n\n\nbrowser-sync start --server --directory --files \"**/*\"\n\n\n\n\nCombine JS files\n\n\n\n\nRequirejs\n\n\nFor r.js to work (without explicit path) \nnpm install -g requirejs\n\n\n\n\nCSS\n\n\nSass Notes\n\n\n\n\nUsing sassc and libsass\n\n\nlibSass\n\n\nExport the library location so node-sass can use it.\n\n\n\n\nCompiling compass sass config.rb file\n\n\n\n\nCompiling compass sass with sass c library.\n\n\nsass --compass sass/styles.scss test,css\n - seems to read the compass config.rb file to find paths.\n\n\n\n\n\n\n\n\nMaintainable CSS\n\n\n\n\nBEM (block, element, modifier) methodology\n\n\n\n\nParallax\n\n\n\n\nDavid Walsh - Used initially\n\n\nKeith Clark\n - nice 3d effect\n\n\nw3schools demo\n - Tried this one\n\n\nPure Css\n - 3d effect",
            "title": "Front"
        },
        {
            "location": "/web/front/#web-development-tools-finding-tools-that-are-really-useful-for-editing",
            "text": "",
            "title": "Web Development Tools - finding tools that are really useful for editing"
        },
        {
            "location": "/web/front/#resources",
            "text": "https://frontend.directory",
            "title": "Resources"
        },
        {
            "location": "/web/front/#web-framework",
            "text": "Foundation  Setup a new project  foundation new    uikit",
            "title": "Web Framework"
        },
        {
            "location": "/web/front/#templates",
            "text": "CoreUI  - Admin template  flakes  - Design and frontend framework for dashboard.",
            "title": "Templates"
        },
        {
            "location": "/web/front/#tools",
            "text": "",
            "title": "Tools"
        },
        {
            "location": "/web/front/#html-tools",
            "text": "Emmet    Expand html shortcuts  Can really reduce the amount of typing necessary to to create a page.",
            "title": "HTML tools"
        },
        {
            "location": "/web/front/#image-sources",
            "text": "Placement Images List  Hold It",
            "title": "Image Sources"
        },
        {
            "location": "/web/front/#prototype-tools",
            "text": "Random User Generator  - get list of users.  UIFaces  - Faces for user interfaces  CSS Flat Mobile Devices  - Prototype devices in css.  Lists  - Content for prototyping",
            "title": "Prototype tools"
        },
        {
            "location": "/web/front/#local-static-file-server",
            "text": "browser-sync  Node.js tool   browser-sync start --server --directory --files \"**/*\"",
            "title": "Local static file server"
        },
        {
            "location": "/web/front/#combine-js-files",
            "text": "Requirejs  For r.js to work (without explicit path)  npm install -g requirejs",
            "title": "Combine JS files"
        },
        {
            "location": "/web/front/#css",
            "text": "",
            "title": "CSS"
        },
        {
            "location": "/web/front/#sass-notes",
            "text": "Using sassc and libsass  libSass  Export the library location so node-sass can use it.",
            "title": "Sass Notes"
        },
        {
            "location": "/web/front/#compiling-compass-sass-configrb-file",
            "text": "Compiling compass sass with sass c library.  sass --compass sass/styles.scss test,css  - seems to read the compass config.rb file to find paths.",
            "title": "Compiling compass sass config.rb file"
        },
        {
            "location": "/web/front/#maintainable-css",
            "text": "BEM (block, element, modifier) methodology",
            "title": "Maintainable CSS"
        },
        {
            "location": "/web/front/#parallax",
            "text": "David Walsh - Used initially  Keith Clark  - nice 3d effect  w3schools demo  - Tried this one  Pure Css  - 3d effect",
            "title": "Parallax"
        },
        {
            "location": "/web/notes/",
            "text": "Notes related to front-end development.\n\n\nJavaScript Notes\n\n\nResources\n\n\n\n\nAwesome Angular\n\n\nYou Don't Need jQuery\n\n\n\n\nTools\n\n\n\n\nLerna\n - Manage JavaScript projects with multiple packages\n\n\nColmena\n - Colmena - CMS system.\n\n\n\n\nIonic\n\n\n\n\nInclude font-awesome fonts in project.\n\n\n\n\nFontAwesome in Ionic\n\n\n\n\nInstall FontAwesome - \nnpm install --save font-awesome\n\n\n\n\nCreate script to copy fonts into \nwww/assets/fonts\n\n\n\n\n\n\nSet path to fonts in SCSS - \n$fa-font-path: /assets/fonts;\n in \nscr/app/app.scss\n; \n\n\n\n\nhttps://forum.ionicframework.com/t/adding-font-awesome-to-rc0/65925/3 - comments for using with sass to convert to ion-icon.",
            "title": "General Notes"
        },
        {
            "location": "/web/notes/#notes-related-to-front-end-development",
            "text": "",
            "title": "Notes related to front-end development."
        },
        {
            "location": "/web/notes/#javascript-notes",
            "text": "",
            "title": "JavaScript Notes"
        },
        {
            "location": "/web/notes/#resources",
            "text": "Awesome Angular  You Don't Need jQuery",
            "title": "Resources"
        },
        {
            "location": "/web/notes/#tools",
            "text": "Lerna  - Manage JavaScript projects with multiple packages  Colmena  - Colmena - CMS system.",
            "title": "Tools"
        },
        {
            "location": "/web/notes/#ionic",
            "text": "Include font-awesome fonts in project.   FontAwesome in Ionic   Install FontAwesome -  npm install --save font-awesome   Create script to copy fonts into  www/assets/fonts    Set path to fonts in SCSS -  $fa-font-path: /assets/fonts;  in  scr/app/app.scss ;    https://forum.ionicframework.com/t/adding-font-awesome-to-rc0/65925/3 - comments for using with sass to convert to ion-icon.",
            "title": "Ionic"
        },
        {
            "location": "/web/javascript/rxjs/",
            "text": "Figuring out RXJS\n\n\nNotes\n\n\n\n\n\n\nGetting it to work with typescript\n\n\n\n\nError: \nUncaught TypeError: Cannot read property 'Observable' of undefined\n. Works in plain javascript.\n\n\nFix:\n\n\nInstall type definitions for rxjs \nnpm install --save-dev @type/rx\n\n\nImport as \nimport * as Rx from 'rxjs'\n\n\n\n\n\n\n\n\n\n\n\n\nIssues with \nRx.DOM.get()\n. Error: \nThe value of the 'Access-Control-Allow-Origin' header in the response must not be the wildcard '*' when the request's credentials mode is 'include'\n\n\n\n\nFix:\n\n\nIssue 1732\n\n\nProvide custom factory for XHR\n\n\n\n\n\n\n\n\n\n\n\n\n    const settings = {\n    crossDomain: true,\n    responseType: \"json\",\n    method: \"GET\",\n    createXHR: () => new XMLHttpRequest(),\n    url: url\n  }\n\n\n\n\nResources\n\n\n\n\nOfficial Site\n\n\nGithub RX Book\n\n\nRx Extensions",
            "title": "RxJs"
        },
        {
            "location": "/web/javascript/rxjs/#figuring-out-rxjs",
            "text": "",
            "title": "Figuring out RXJS"
        },
        {
            "location": "/web/javascript/rxjs/#notes",
            "text": "Getting it to work with typescript   Error:  Uncaught TypeError: Cannot read property 'Observable' of undefined . Works in plain javascript.  Fix:  Install type definitions for rxjs  npm install --save-dev @type/rx  Import as  import * as Rx from 'rxjs'       Issues with  Rx.DOM.get() . Error:  The value of the 'Access-Control-Allow-Origin' header in the response must not be the wildcard '*' when the request's credentials mode is 'include'   Fix:  Issue 1732  Provide custom factory for XHR           const settings = {\n    crossDomain: true,\n    responseType: \"json\",\n    method: \"GET\",\n    createXHR: () => new XMLHttpRequest(),\n    url: url\n  }",
            "title": "Notes"
        },
        {
            "location": "/web/javascript/rxjs/#resources",
            "text": "Official Site  Github RX Book  Rx Extensions",
            "title": "Resources"
        },
        {
            "location": "/php/resources/",
            "text": "Resources and notes for PHP\n\n\nSetup\n\n\nTo enable php71-apache2handler, run:\n\n \ncd /opt/local/apache2/modules\n\n\n \nsudo /opt/local/apache2/bin/apxs -a -e -n php7 mod_php71.so\n\n\nResources\n\n\n\n\nGoogle Cloud Datastore Library for PHP",
            "title": "Resources"
        },
        {
            "location": "/php/resources/#resources-and-notes-for-php",
            "text": "",
            "title": "Resources and notes for PHP"
        },
        {
            "location": "/php/resources/#setup",
            "text": "To enable php71-apache2handler, run:   cd /opt/local/apache2/modules    sudo /opt/local/apache2/bin/apxs -a -e -n php7 mod_php71.so",
            "title": "Setup"
        },
        {
            "location": "/php/resources/#resources",
            "text": "Google Cloud Datastore Library for PHP",
            "title": "Resources"
        },
        {
            "location": "/php/composer/",
            "text": "Notes about using Composer to manage a package\n\n\nNotes for managing a custom packages with php composer.\n\n\n\n\nLoading a package from a vcs repository\n\n\nPackage must have it's own \ncomposer.json\n file.\n\n\n\n\n{\n  \"name\": \"catenare/smartsheet\",\n  \"description\": \"API Connection to Smartsheet. Add sheets and add rows\",\n  \"license\": \"proprietary\",\n  \"authors\": [\n    {\n      \"name\": \"Johan Martin\",\n      \"homepage\": \"http://www.johan-martin.com\",\n      \"email\": \"martin.johan@johan-martin.com\",\n      \"role\": \"developer\"\n    }\n  ],\n  \"require\": {\n    \"guzzlehttp/guzzle\": \"^6.2\",\n    \"symfony/console\": \"^3.3\",\n    \"symfony/dotenv\": \"^3.3\",\n    \"symfony/dependency-injection\": \"^3.3\",\n    \"symfony/yaml\": \"^3.3\",\n    \"symfony/config\": \"^3.3\",\n    \"symfony/serializer\": \"^3.3\",\n    \"zendframework/zend-json\": \"^3.0\"\n  },\n  \"minimum-stability\": \"dev\",\n  \"autoload\": {\n    \"psr-4\": { \"SmartSheet\\\\\": \"src/\" },\n    \"files\":[\"boot.php\",\"main.php\"]\n  },\n  \"autoload-dev\": {\n    \"psr-4\": { \"SheetTest\\\\\": \"test/\" }\n  },\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"^6.2\"\n  }\n}\n\n\n\n\n\n\nUse \ndev-{branch}\n to have composer checkout the correct git branch.\n\n\nExample:\n\n\n\n\n\"require\": {\n        \"catenare/smartsheet\": \"dev-master\"\n    },\n    \"repositories\": [\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/smartsheet-api\"\n    }\n  ]\n\n\n\n\n\n\nOther Notes\n\n\nFor wordpress: Use the \ntype\n property set to \nwordpress-plugin\n. Wordpress installer will install it in the right location. \nComposer seems to be reluctant to go more than one level deep when checking out dev branches.\n\n\n\n\n\n\n\n\n{\n    \"name\": \"catenare/ninjaforms-smartsheet-plugin\",\n    \"description\": \"Add form data to smartsheet\",\n    \"type\": \"wordpress-plugin\",\n    \"license\": \"proprietary\",\n    \"authors\": [\n    {\n        \"name\": \"Johan Martin\",\n        \"homepage\": \"http://www.johan-martin.com\",\n        \"email\": \"martin.johan@johan-martin.com\",\n        \"role\": \"developer\"\n    }\n    ],\n    \"keywords\":[\n        \"alicart\",\n        \"ninja-forms\",\n        \"smartsheet\"\n    ],\n    \"require\": {\n        \"catenare/smartsheet\": \"dev-master\"\n    },\n    \"repositories\": [\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/smartsheet-api\"\n    }\n  ]\n}\n\n\n\n\n\n\nDependencies for sub packages in vcs. Put repo info in man composer.json file.\n\n\n\n\n{\n  \"name\": \"catenare/wordpress-intranet\",\n  \"description\": \"Intranet based on WordPress\",\n  \"license\": \"proprietary\",\n  \"keywords\": [\n    \"intranet\",\n    \"secure\"\n  ],\n  \"type\": \"package\",\n  \"homepage\": \"http://www.johan-martin.com\",\n  \"authors\": [\n    {\n      \"name\": \"WordPress Community\",\n      \"homepage\": \"http://wordpress.org/about/\"\n    },\n    {\n      \"name\": \"Johan Martin\",\n      \"homepage\": \"http://www.johan-martin.com\",\n      \"email\": \"martin.johan@johan-martin.com\",\n      \"role\": \"developer\"\n    }\n  ],\n  \"support\": {\n    \"email\": \"martin.johan@johan-martin.com\"\n  },\n  \"extra\": {\n    \"wordpress-install-dir\": \"public\",\n    \"installer-paths\": {\n      \"public/wp-content/plugins/{$name}\": [\n        \"type:wordpress-plugin\"\n      ],\n      \"public/wp-content/themes/{$name}\": [\n        \"type:wordpress-theme\"\n      ]\n    }\n  },\n  \"require\": {\n    \"php\": \"~7\",\n    \"johnpbloch/wordpress-core-installer\": \"~0.2\",\n    \"johnpbloch/wordpress-core\": \"~4.7\",\n    \"wpackagist-plugin/login-lockdown\":\"~1.7\",\n    \"wpackagist-plugin/all-in-one-intranet\": \"~1.2\",\n    \"wpackagist-plugin/ninja-forms\":\"~3.1\",\n    \"catenare/aad-sso-wordpress\": \"dev-alicart\",\n    \"catenare/ninjaforms-smartsheet-plugin\": \"dev-master\"\n  },\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"^6.2\"\n  },\n  \"repositories\": [\n    {\n      \"type\": \"composer\",\n      \"url\": \"https://wpackagist.org\"\n    },\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/aad-sso-wordpress\"\n    },\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/ninjaforms-smartsheet\"\n    },\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/smartsheet-api\"\n    }\n  ]\n}\n\n\n\n\n\n\nAdded \nsmartsheet-api\n vcs because \nninjaform-smartsheet-plugin\n dependent on it.",
            "title": "Composer"
        },
        {
            "location": "/php/composer/#notes-about-using-composer-to-manage-a-package",
            "text": "",
            "title": "Notes about using Composer to manage a package"
        },
        {
            "location": "/php/composer/#notes-for-managing-a-custom-packages-with-php-composer",
            "text": "Loading a package from a vcs repository  Package must have it's own  composer.json  file.   {\n  \"name\": \"catenare/smartsheet\",\n  \"description\": \"API Connection to Smartsheet. Add sheets and add rows\",\n  \"license\": \"proprietary\",\n  \"authors\": [\n    {\n      \"name\": \"Johan Martin\",\n      \"homepage\": \"http://www.johan-martin.com\",\n      \"email\": \"martin.johan@johan-martin.com\",\n      \"role\": \"developer\"\n    }\n  ],\n  \"require\": {\n    \"guzzlehttp/guzzle\": \"^6.2\",\n    \"symfony/console\": \"^3.3\",\n    \"symfony/dotenv\": \"^3.3\",\n    \"symfony/dependency-injection\": \"^3.3\",\n    \"symfony/yaml\": \"^3.3\",\n    \"symfony/config\": \"^3.3\",\n    \"symfony/serializer\": \"^3.3\",\n    \"zendframework/zend-json\": \"^3.0\"\n  },\n  \"minimum-stability\": \"dev\",\n  \"autoload\": {\n    \"psr-4\": { \"SmartSheet\\\\\": \"src/\" },\n    \"files\":[\"boot.php\",\"main.php\"]\n  },\n  \"autoload-dev\": {\n    \"psr-4\": { \"SheetTest\\\\\": \"test/\" }\n  },\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"^6.2\"\n  }\n}   Use  dev-{branch}  to have composer checkout the correct git branch.  Example:   \"require\": {\n        \"catenare/smartsheet\": \"dev-master\"\n    },\n    \"repositories\": [\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/smartsheet-api\"\n    }\n  ]   Other Notes  For wordpress: Use the  type  property set to  wordpress-plugin . Wordpress installer will install it in the right location.  Composer seems to be reluctant to go more than one level deep when checking out dev branches.     {\n    \"name\": \"catenare/ninjaforms-smartsheet-plugin\",\n    \"description\": \"Add form data to smartsheet\",\n    \"type\": \"wordpress-plugin\",\n    \"license\": \"proprietary\",\n    \"authors\": [\n    {\n        \"name\": \"Johan Martin\",\n        \"homepage\": \"http://www.johan-martin.com\",\n        \"email\": \"martin.johan@johan-martin.com\",\n        \"role\": \"developer\"\n    }\n    ],\n    \"keywords\":[\n        \"alicart\",\n        \"ninja-forms\",\n        \"smartsheet\"\n    ],\n    \"require\": {\n        \"catenare/smartsheet\": \"dev-master\"\n    },\n    \"repositories\": [\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/smartsheet-api\"\n    }\n  ]\n}   Dependencies for sub packages in vcs. Put repo info in man composer.json file.   {\n  \"name\": \"catenare/wordpress-intranet\",\n  \"description\": \"Intranet based on WordPress\",\n  \"license\": \"proprietary\",\n  \"keywords\": [\n    \"intranet\",\n    \"secure\"\n  ],\n  \"type\": \"package\",\n  \"homepage\": \"http://www.johan-martin.com\",\n  \"authors\": [\n    {\n      \"name\": \"WordPress Community\",\n      \"homepage\": \"http://wordpress.org/about/\"\n    },\n    {\n      \"name\": \"Johan Martin\",\n      \"homepage\": \"http://www.johan-martin.com\",\n      \"email\": \"martin.johan@johan-martin.com\",\n      \"role\": \"developer\"\n    }\n  ],\n  \"support\": {\n    \"email\": \"martin.johan@johan-martin.com\"\n  },\n  \"extra\": {\n    \"wordpress-install-dir\": \"public\",\n    \"installer-paths\": {\n      \"public/wp-content/plugins/{$name}\": [\n        \"type:wordpress-plugin\"\n      ],\n      \"public/wp-content/themes/{$name}\": [\n        \"type:wordpress-theme\"\n      ]\n    }\n  },\n  \"require\": {\n    \"php\": \"~7\",\n    \"johnpbloch/wordpress-core-installer\": \"~0.2\",\n    \"johnpbloch/wordpress-core\": \"~4.7\",\n    \"wpackagist-plugin/login-lockdown\":\"~1.7\",\n    \"wpackagist-plugin/all-in-one-intranet\": \"~1.2\",\n    \"wpackagist-plugin/ninja-forms\":\"~3.1\",\n    \"catenare/aad-sso-wordpress\": \"dev-alicart\",\n    \"catenare/ninjaforms-smartsheet-plugin\": \"dev-master\"\n  },\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"^6.2\"\n  },\n  \"repositories\": [\n    {\n      \"type\": \"composer\",\n      \"url\": \"https://wpackagist.org\"\n    },\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/aad-sso-wordpress\"\n    },\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/ninjaforms-smartsheet\"\n    },\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/smartsheet-api\"\n    }\n  ]\n}   Added  smartsheet-api  vcs because  ninjaform-smartsheet-plugin  dependent on it.",
            "title": "Notes for managing a custom packages with php composer."
        },
        {
            "location": "/php/wordpress/setup/",
            "text": "Setting up Wordpress with Composer, Nginx, PHP-fpm on Mac OS X\n\n\nSettings\n\n\n\n\nMac OS X (10.11.6 & Mac OS Sierra)\n\n\nMacPorts (2.4.1)\n\n\nSoftware\n\n\nphp71\n\n\nmysql57\n\n\nWordpress 4.8\n\n\n\n\n\n\n\n\nUsing sqlite as the database\n\n\n\n\nUse sqlite plugin for sqlite - \nSQLite Integration\n\n\nUse for lightweight development.\n\n\n\n\nResources\n\n\n\n\nnginx documentation - wordpress\n\n\nIntro to Wordpress and Composer\n\n\nJohn P. Bloch\n\n\n\n\nInstall Wordpress with composer\n\n\n\n\nInstall composer\n\n\nUse \nWordpress\n package repository\n\n\nwpackagist\n - Use with composer to install wordpress plugins and themes.\n\n\n\n\n\n\nCreate \ncomposer.json\n file\n\n\nAdd custom repository for plugin being developed.\n\n\nSee bottom of \ncomposer.json\n file.\n\n\n\n\n\n\n\n\n{\n  \"name\": \"catenare/wordpress-intranet\",\n  \"description\": \"Intranet based on WordPress\",\n  \"keywords\": [\n    \"intranet\",\n    \"secure\"\n  ],\n  \"type\": \"package\",\n  \"homepage\": \"http://www.johan-martin.com\",\n  \"authors\": [\n    {\n      \"name\": \"WordPress Community\",\n      \"homepage\": \"http://wordpress.org/about/\"\n    },\n    {\n      \"name\": \"Johan Martin\",\n      \"homepage\": \"http://www.johan-martin.com\"\n    }\n  ],\n  \"support\": {\n    \"email\": \"martin.johan@johan-martin.com\"\n  },\n  \"extra\": {\n    \"wordpress-install-dir\": \"public\",\n    \"installer-paths\": {\n      \"public/wp-content/plugins/{$name}\": [\n        \"type:wordpress-plugin\"\n      ],\n      \"public/wp-content/themes/{$name}\": [\n        \"type:wordpress-theme\"\n      ]\n    }\n  },\n  \"require\": {\n    \"php\": \"~7\",\n    \"johnpbloch/wordpress-core-installer\": \"~0.2\",\n    \"johnpbloch/wordpress-core\": \"~4.7\",\n    \"wpackagist-plugin/unyson\": \"~2.6\",\n    \"wpackagist-plugin/zendesk\":\"~1.7\",\n    \"wpackagist-plugin/login-lockdown\":\"~1.7\",\n    \"wpackagist-plugin/all-in-one-intranet\": \"~1.2\",\n    \"wpackagist-plugin/ninja-forms\":\"~3.1\",\n    \"wpackagist-plugin/memphis-documents-library\":\"~3.6\",\n    \"zurb/foundation\": \"^6.3\",\n    \"catenare/aad-sso-wordpress\": \"dev-alicart\"\n  },\n  \"require-dev\": {\n    \"wpackagist-plugin/theme-check\": \">=20160523\",\n    \"wpackagist-plugin/wordpress-reset\": \"~1.4\",\n    \"wpackagist-plugin/log-deprecated-notices\": \"~0.4\",\n    \"wpackagist-plugin/debug-bar\":\"~0.9\",\n    \"wpackagist-plugin/wordpress-importer\": \"~0.6.3\"\n  },\n  \"repositories\": [\n    {\n      \"type\": \"composer\",\n      \"url\": \"https://wpackagist.org\"\n    },\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/aad-sso-wordpress\"\n    }\n  ]\n}\n\n\n\n\n\n\nRun \ncomposer install\n if no composer.lock file present else, \ncomposer update\n.\n\n\n\n\nInstall ports for Mysql, nginx and fpm\n\n\n\n\nsudo port install mysql57-server nginx php71-fpm php71\n\n\n\n\nSetup Database\n\n\n\n\nSetup mysql server\n\n\nsudo rm -fr /opt/local/var/db/mysql57\n - remove current mysql57 db folder if it exists.\n\n\nsudo /opt/local/lib/mysql57/bin/mysqld --initialize --user=_mysql\n - setup new database and default password\n\n\nmysql -u root -p\n - use password generated with previous step\n\n\nALTER USER 'root'@'localhost' IDENTIFIED BY 'new pass';\n\n\n\n\n\n\n\n\n\n\nCreate and setup database\n\n\nLog into mysql-server\n\n\nmysql -u root -p\n\n\nDrop current database \ndrop database alicart;\n\n\n\n\n\n\nCreate database: \ncreate database alicart;\n\n\nAdd User: \nCREATE USER 'alicart'@'localhost' IDENTIFIED BY 'password';\n\n\nGrant privileges to user: \nGRANT ALL PRIVILEGES ON alicart.* to 'alicart'@'localhost\n;\n\n\nReload privileges: \nFLUSH PRIVILEGES;\n\n\n\n\n\n\nSetup php\n\n\ncp /opt/local/etc/php.ini-development /opt/local/etc/php.ini\n\n\nConfigure socket connection for mysql in php.ini\n\n\nEdit [Pdo_mysql] section\n\n\npdo_mysql.default_socket=/opt/local/var/run/mysql57/mysqld.sock\n\n\n\n\n\n\nAdd \ncgi.fix_pathinfo = 0;\n to end of file\n\n\n\n\n\n\n\n\n\n\nConfigure fpm - \n/opt/local/etc/php71\n folder\n\n\ncp php-fpm.conf.default php-fpm.conf\n\n\ncp php-fpm.d/www.conf.default php-fpm.d/www.conf\n\n\nEdit \nphp-fpm.d/www.conf\n to change to socket\n    \nini\n  ;listen = 127.0.0.1:9000\n  listen = \"/opt/local/var/run/php71/php71-fpm.socket\"\n\n\nStart fpm - \nsudo port load php71-fpm\n\n\n\n\n\n\nSetup nginx - \n/opt/local/etc/nginx\n\n\n\n\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n        #access_log  logs/host.access.log  main;\n        root /Users/themartins/Projects/johan/clients/alicart/wordpress/public;\n        index  index.php;\n\n  #      location / {\n            #root   share/nginx/html;\n\n   #     }\n\n        location / {\n                # This is cool because no php is touched for static content.\n                # include the \"?$args\" part so non-default permalinks doesn't break when using query string\n                try_files $uri $uri/ /index.php?$args;\n        }\n\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   share/nginx/html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        location ~ \\.php$ {\n            fastcgi_pass    unix:/opt/local/var/run/php71/php5-fpm.socket;             \n            fastcgi_intercept_errors on;\n            include         fastcgi.conf;\n        }\n\n        location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n            expires max;\n            log_not_found off;\n        }\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   share/nginx/html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   share/nginx/html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n\n\n\n\n\n\nStart nginx - \nsudo port load nginx\n - macports\n\n\nUbuntu\n\n\nsudo nginx -t\n - test configuration\n\n\nsudo systemctl nging restart\n\n\n\n\n\n\n\n\nMulti-site configuration - nginx/ubuntu on AWS.\n\n\nTrying to configure wordpress multisite on Ubuntu.\n\n\n\n\nnginx config gist\n\n\nNotes for rewrite rules in nginx",
            "title": "Setup"
        },
        {
            "location": "/php/wordpress/setup/#setting-up-wordpress-with-composer-nginx-php-fpm-on-mac-os-x",
            "text": "",
            "title": "Setting up Wordpress with Composer, Nginx, PHP-fpm on Mac OS X"
        },
        {
            "location": "/php/wordpress/setup/#settings",
            "text": "Mac OS X (10.11.6 & Mac OS Sierra)  MacPorts (2.4.1)  Software  php71  mysql57  Wordpress 4.8",
            "title": "Settings"
        },
        {
            "location": "/php/wordpress/setup/#using-sqlite-as-the-database",
            "text": "Use sqlite plugin for sqlite -  SQLite Integration  Use for lightweight development.",
            "title": "Using sqlite as the database"
        },
        {
            "location": "/php/wordpress/setup/#resources",
            "text": "nginx documentation - wordpress  Intro to Wordpress and Composer  John P. Bloch",
            "title": "Resources"
        },
        {
            "location": "/php/wordpress/setup/#install-wordpress-with-composer",
            "text": "Install composer  Use  Wordpress  package repository  wpackagist  - Use with composer to install wordpress plugins and themes.    Create  composer.json  file  Add custom repository for plugin being developed.  See bottom of  composer.json  file.     {\n  \"name\": \"catenare/wordpress-intranet\",\n  \"description\": \"Intranet based on WordPress\",\n  \"keywords\": [\n    \"intranet\",\n    \"secure\"\n  ],\n  \"type\": \"package\",\n  \"homepage\": \"http://www.johan-martin.com\",\n  \"authors\": [\n    {\n      \"name\": \"WordPress Community\",\n      \"homepage\": \"http://wordpress.org/about/\"\n    },\n    {\n      \"name\": \"Johan Martin\",\n      \"homepage\": \"http://www.johan-martin.com\"\n    }\n  ],\n  \"support\": {\n    \"email\": \"martin.johan@johan-martin.com\"\n  },\n  \"extra\": {\n    \"wordpress-install-dir\": \"public\",\n    \"installer-paths\": {\n      \"public/wp-content/plugins/{$name}\": [\n        \"type:wordpress-plugin\"\n      ],\n      \"public/wp-content/themes/{$name}\": [\n        \"type:wordpress-theme\"\n      ]\n    }\n  },\n  \"require\": {\n    \"php\": \"~7\",\n    \"johnpbloch/wordpress-core-installer\": \"~0.2\",\n    \"johnpbloch/wordpress-core\": \"~4.7\",\n    \"wpackagist-plugin/unyson\": \"~2.6\",\n    \"wpackagist-plugin/zendesk\":\"~1.7\",\n    \"wpackagist-plugin/login-lockdown\":\"~1.7\",\n    \"wpackagist-plugin/all-in-one-intranet\": \"~1.2\",\n    \"wpackagist-plugin/ninja-forms\":\"~3.1\",\n    \"wpackagist-plugin/memphis-documents-library\":\"~3.6\",\n    \"zurb/foundation\": \"^6.3\",\n    \"catenare/aad-sso-wordpress\": \"dev-alicart\"\n  },\n  \"require-dev\": {\n    \"wpackagist-plugin/theme-check\": \">=20160523\",\n    \"wpackagist-plugin/wordpress-reset\": \"~1.4\",\n    \"wpackagist-plugin/log-deprecated-notices\": \"~0.4\",\n    \"wpackagist-plugin/debug-bar\":\"~0.9\",\n    \"wpackagist-plugin/wordpress-importer\": \"~0.6.3\"\n  },\n  \"repositories\": [\n    {\n      \"type\": \"composer\",\n      \"url\": \"https://wpackagist.org\"\n    },\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/catenare/aad-sso-wordpress\"\n    }\n  ]\n}   Run  composer install  if no composer.lock file present else,  composer update .",
            "title": "Install Wordpress with composer"
        },
        {
            "location": "/php/wordpress/setup/#install-ports-for-mysql-nginx-and-fpm",
            "text": "sudo port install mysql57-server nginx php71-fpm php71",
            "title": "Install ports for Mysql, nginx and fpm"
        },
        {
            "location": "/php/wordpress/setup/#setup-database",
            "text": "Setup mysql server  sudo rm -fr /opt/local/var/db/mysql57  - remove current mysql57 db folder if it exists.  sudo /opt/local/lib/mysql57/bin/mysqld --initialize --user=_mysql  - setup new database and default password  mysql -u root -p  - use password generated with previous step  ALTER USER 'root'@'localhost' IDENTIFIED BY 'new pass';      Create and setup database  Log into mysql-server  mysql -u root -p  Drop current database  drop database alicart;    Create database:  create database alicart;  Add User:  CREATE USER 'alicart'@'localhost' IDENTIFIED BY 'password';  Grant privileges to user:  GRANT ALL PRIVILEGES ON alicart.* to 'alicart'@'localhost ;  Reload privileges:  FLUSH PRIVILEGES;    Setup php  cp /opt/local/etc/php.ini-development /opt/local/etc/php.ini  Configure socket connection for mysql in php.ini  Edit [Pdo_mysql] section  pdo_mysql.default_socket=/opt/local/var/run/mysql57/mysqld.sock    Add  cgi.fix_pathinfo = 0;  to end of file      Configure fpm -  /opt/local/etc/php71  folder  cp php-fpm.conf.default php-fpm.conf  cp php-fpm.d/www.conf.default php-fpm.d/www.conf  Edit  php-fpm.d/www.conf  to change to socket\n     ini\n  ;listen = 127.0.0.1:9000\n  listen = \"/opt/local/var/run/php71/php71-fpm.socket\"  Start fpm -  sudo port load php71-fpm    Setup nginx -  /opt/local/etc/nginx   #user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n        #access_log  logs/host.access.log  main;\n        root /Users/themartins/Projects/johan/clients/alicart/wordpress/public;\n        index  index.php;\n\n  #      location / {\n            #root   share/nginx/html;\n\n   #     }\n\n        location / {\n                # This is cool because no php is touched for static content.\n                # include the \"?$args\" part so non-default permalinks doesn't break when using query string\n                try_files $uri $uri/ /index.php?$args;\n        }\n\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   share/nginx/html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        location ~ \\.php$ {\n            fastcgi_pass    unix:/opt/local/var/run/php71/php5-fpm.socket;             \n            fastcgi_intercept_errors on;\n            include         fastcgi.conf;\n        }\n\n        location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n            expires max;\n            log_not_found off;\n        }\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   share/nginx/html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   share/nginx/html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}   Start nginx -  sudo port load nginx  - macports  Ubuntu  sudo nginx -t  - test configuration  sudo systemctl nging restart",
            "title": "Setup Database"
        },
        {
            "location": "/php/wordpress/setup/#multi-site-configuration-nginxubuntu-on-aws",
            "text": "Trying to configure wordpress multisite on Ubuntu.   nginx config gist  Notes for rewrite rules in nginx",
            "title": "Multi-site configuration - nginx/ubuntu on AWS."
        },
        {
            "location": "/php/wordpress/wordpress/",
            "text": "Setting up Wordpress with Composer, Nginx, PHP-fpm on Mac OS X\n\n\nSettings\n\n\n\n\nMac OS X (10.11.6 & Mac OS Sierra)\n\n\nMacPorts (2.4.1)\n\n\nSoftware\n\n\nphp71\n\n\nmysql57\n\n\nWordpress 4.7\n\n\n\n\n\n\n\n\nResources\n\n\n\n\nnginx documentation - wordpress\n\n\nComposer in Wordpress\n\n\n\n\nInstall Wordpress with composer\n\n\n\n\nInstall composer\n\n\nCreate composer.json file\n\n\n\n\n{\n  \"name\": \"johnpbloch/wordpress\",\n  \"description\": \"WordPress is web software you can use to create a beautiful website or blog.\",\n  \"keywords\": [\n    \"wordpress\",\n    \"blog\",\n    \"cms\"\n  ],\n  \"type\": \"package\",\n  \"homepage\": \"http://wordpress.org/\",\n  \"license\": \"GPL-2.0+\",\n  \"authors\": [\n    {\n      \"name\": \"WordPress Community\",\n      \"homepage\": \"http://wordpress.org/about/\"\n    }\n  ],\n  \"support\": {\n    \"issues\": \"http://core.trac.wordpress.org/\",\n    \"forum\": \"http://wordpress.org/support/\",\n    \"wiki\": \"http://codex.wordpress.org/\",\n    \"irc\": \"irc://irc.freenode.net/wordpress\",\n    \"source\": \"http://core.trac.wordpress.org/browser\"\n  },\n  \"extra\": {\n    \"wordpress-install-dir\": \"public\",\n    \"installer-paths\": {\n      \"public/wp-content/plugins/{$name}\": [\n        \"type:wordpress-plugin\"\n      ],\n      \"public/wp-content/themes/{$name}\": [\n        \"type:wordpress-theme\"\n      ]\n    }\n  },\n  \"require\": {\n    \"php\": \">=5.3.2\",\n    \"johnpbloch/wordpress-core-installer\": \"~0.2\",\n    \"johnpbloch/wordpress-core\": \">=4.7\",\n    \"wpackagist-plugin/unyson\": \">=2.6\"\n  },\n  \"require-dev\":{\n    \"wpackagist-plugin/theme-check\": \">=20160523\",\n    \"wpackagist-plugin/wordpress-reset\": \">=1.4\",\n    \"wpackagist-plugin/log-deprecated-notices\": \">=0.4\",\n    \"wpackagist-plugin/debug-bar\":\">=0.9\",\n    \"wpackagist-plugin/wordpress-importer\": \">=0.6.3\"\n  },\n  \"repositories\": [\n    {\n      \"type\": \"composer\",\n      \"url\": \"https://wpackagist.org\"\n    }\n  ]\n}\n\n\n\n\n\n\nRun \ncomposer install\n if no composer.lock file present.\n\n\n\n\nSetup ports\n\n\n\n\nsudo port install mysql57-server nginx php71-fpm php71\n\n\n\n\nPorts configuration\n\n\n\n\nSetup mysql server\n\n\nsudo rm -fr /opt/local/var/db/mysql57\n - remove current mysql57 db folder if it exists.\n\n\nsudo /opt/local/lib/mysql57/bin/mysqld --initialize --user=_mysql\n - setup new database and default password\n\n\nmysql -u root -p\n - use password generated with previous step\n\n\nALTER USER 'root'@'localhost' IDENTIFIED BY 'new pass';\n\n\n\n\n\n\n\n\n\n\nSetup php\n\n\ncp /opt/local/etc/php.ini-development /opt/local/etc/php.ini\n\n\nConfigure socket connection for mysql in php.ini\n\n\nEdit [Pdo_mysql] section\n\n\npdo_mysql.default_socket=/opt/local/var/run/mysql57/mysqld.sock\n\n\n\n\n\n\nAdd \ncgi.fix_pathinfo = 0;\n to end of file\n\n\n\n\n\n\n\n\n\n\nConfigure fpm - \n/opt/local/etc/php71\n folder\n\n\ncp php-fpm.conf.default php-fpm.conf\n\n\ncp php-fpm.d/www.conf.default php-fpm.d/www.conf\n\n\nEdit \nphp-fpm.d/www.conf\n to change to socket\n\n;listen = 127.0.0.1:9000\n  listen = \"/opt/local/var/run/php71/php71-fpm.socket\"\n\n\nStart fpm - \nsudo port load php71-fpm\n\n\n\n\n\n\nSetup nginx - \n/opt/local/etc/nginx\n - location of setup file\n\n\n\n\n    server {\n            listen       80;\n            server_name  localhost;\n            root    /path/to/wordpress/public;\n            index   index.php;\n            location = /favicon.ico {\n                log_not_found off;\n                access_log off;\n            }\n            location = /robots.txt {\n                allow all;\n                log_not_found off;\n                access_log off;\n            }\n\n\n             location / {\n                try_files $uri $uri/ /index.php?args;\n             }\n\n            location ~ \\.php$ {\n                fastcgi_param   HTTP_PROXY \"\";\n                fastcgi_pass    unix:/opt/local/var/run/php71/php71-fpm.socket;\n                include        fastcgi.conf;\n                fastcgi_intercept_errors on;\n            }\n\n            location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n                expires max;\n                log_not_found off;\n            }\n\n\n            # deny access to .htaccess files, if Apache's document root\n            # concurs with nginx's one\n            #\n            #location ~ /\\.ht {\n            #    deny  all;\n            #}\n        }\n\n\n\n\n\n\nStart nginx - \nsudo port load nginx\n\n\n\n\nSetup and install packages\n\n\n\n\nwpackagist\n - Use composer to install packages.\n\n\n\n\nOther Tools\n\n\n\n\nWordpress CLI\n - command line client for wordpress. Definitely worth installing.\n\n\nPossible to install via composer - \ncomposer global require wp-cli/wp-cli\n\n\n\n\n\n\n\n\nWordpress Development\n\n\n\n\nmake.wordpress.org\n\n\nGutenberg\n - next level editor",
            "title": "Home"
        },
        {
            "location": "/php/wordpress/wordpress/#setting-up-wordpress-with-composer-nginx-php-fpm-on-mac-os-x",
            "text": "",
            "title": "Setting up Wordpress with Composer, Nginx, PHP-fpm on Mac OS X"
        },
        {
            "location": "/php/wordpress/wordpress/#settings",
            "text": "Mac OS X (10.11.6 & Mac OS Sierra)  MacPorts (2.4.1)  Software  php71  mysql57  Wordpress 4.7",
            "title": "Settings"
        },
        {
            "location": "/php/wordpress/wordpress/#resources",
            "text": "nginx documentation - wordpress  Composer in Wordpress",
            "title": "Resources"
        },
        {
            "location": "/php/wordpress/wordpress/#install-wordpress-with-composer",
            "text": "Install composer  Create composer.json file   {\n  \"name\": \"johnpbloch/wordpress\",\n  \"description\": \"WordPress is web software you can use to create a beautiful website or blog.\",\n  \"keywords\": [\n    \"wordpress\",\n    \"blog\",\n    \"cms\"\n  ],\n  \"type\": \"package\",\n  \"homepage\": \"http://wordpress.org/\",\n  \"license\": \"GPL-2.0+\",\n  \"authors\": [\n    {\n      \"name\": \"WordPress Community\",\n      \"homepage\": \"http://wordpress.org/about/\"\n    }\n  ],\n  \"support\": {\n    \"issues\": \"http://core.trac.wordpress.org/\",\n    \"forum\": \"http://wordpress.org/support/\",\n    \"wiki\": \"http://codex.wordpress.org/\",\n    \"irc\": \"irc://irc.freenode.net/wordpress\",\n    \"source\": \"http://core.trac.wordpress.org/browser\"\n  },\n  \"extra\": {\n    \"wordpress-install-dir\": \"public\",\n    \"installer-paths\": {\n      \"public/wp-content/plugins/{$name}\": [\n        \"type:wordpress-plugin\"\n      ],\n      \"public/wp-content/themes/{$name}\": [\n        \"type:wordpress-theme\"\n      ]\n    }\n  },\n  \"require\": {\n    \"php\": \">=5.3.2\",\n    \"johnpbloch/wordpress-core-installer\": \"~0.2\",\n    \"johnpbloch/wordpress-core\": \">=4.7\",\n    \"wpackagist-plugin/unyson\": \">=2.6\"\n  },\n  \"require-dev\":{\n    \"wpackagist-plugin/theme-check\": \">=20160523\",\n    \"wpackagist-plugin/wordpress-reset\": \">=1.4\",\n    \"wpackagist-plugin/log-deprecated-notices\": \">=0.4\",\n    \"wpackagist-plugin/debug-bar\":\">=0.9\",\n    \"wpackagist-plugin/wordpress-importer\": \">=0.6.3\"\n  },\n  \"repositories\": [\n    {\n      \"type\": \"composer\",\n      \"url\": \"https://wpackagist.org\"\n    }\n  ]\n}   Run  composer install  if no composer.lock file present.",
            "title": "Install Wordpress with composer"
        },
        {
            "location": "/php/wordpress/wordpress/#setup-ports",
            "text": "sudo port install mysql57-server nginx php71-fpm php71",
            "title": "Setup ports"
        },
        {
            "location": "/php/wordpress/wordpress/#ports-configuration",
            "text": "Setup mysql server  sudo rm -fr /opt/local/var/db/mysql57  - remove current mysql57 db folder if it exists.  sudo /opt/local/lib/mysql57/bin/mysqld --initialize --user=_mysql  - setup new database and default password  mysql -u root -p  - use password generated with previous step  ALTER USER 'root'@'localhost' IDENTIFIED BY 'new pass';      Setup php  cp /opt/local/etc/php.ini-development /opt/local/etc/php.ini  Configure socket connection for mysql in php.ini  Edit [Pdo_mysql] section  pdo_mysql.default_socket=/opt/local/var/run/mysql57/mysqld.sock    Add  cgi.fix_pathinfo = 0;  to end of file      Configure fpm -  /opt/local/etc/php71  folder  cp php-fpm.conf.default php-fpm.conf  cp php-fpm.d/www.conf.default php-fpm.d/www.conf  Edit  php-fpm.d/www.conf  to change to socket ;listen = 127.0.0.1:9000\n  listen = \"/opt/local/var/run/php71/php71-fpm.socket\"  Start fpm -  sudo port load php71-fpm    Setup nginx -  /opt/local/etc/nginx  - location of setup file       server {\n            listen       80;\n            server_name  localhost;\n            root    /path/to/wordpress/public;\n            index   index.php;\n            location = /favicon.ico {\n                log_not_found off;\n                access_log off;\n            }\n            location = /robots.txt {\n                allow all;\n                log_not_found off;\n                access_log off;\n            }\n\n\n             location / {\n                try_files $uri $uri/ /index.php?args;\n             }\n\n            location ~ \\.php$ {\n                fastcgi_param   HTTP_PROXY \"\";\n                fastcgi_pass    unix:/opt/local/var/run/php71/php71-fpm.socket;\n                include        fastcgi.conf;\n                fastcgi_intercept_errors on;\n            }\n\n            location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n                expires max;\n                log_not_found off;\n            }\n\n\n            # deny access to .htaccess files, if Apache's document root\n            # concurs with nginx's one\n            #\n            #location ~ /\\.ht {\n            #    deny  all;\n            #}\n        }   Start nginx -  sudo port load nginx",
            "title": "Ports configuration"
        },
        {
            "location": "/php/wordpress/wordpress/#setup-and-install-packages",
            "text": "wpackagist  - Use composer to install packages.",
            "title": "Setup and install packages"
        },
        {
            "location": "/php/wordpress/wordpress/#other-tools",
            "text": "Wordpress CLI  - command line client for wordpress. Definitely worth installing.  Possible to install via composer -  composer global require wp-cli/wp-cli",
            "title": "Other Tools"
        },
        {
            "location": "/php/wordpress/wordpress/#wordpress-development",
            "text": "make.wordpress.org  Gutenberg  - next level editor",
            "title": "Wordpress Development"
        },
        {
            "location": "/php/wordpress/plugin development/",
            "text": "Building a custom wordpress plugin.\n\n\nResources\n\n\n\n\nBoilerplate template - \nWORDPRESS PLUGIN BOILERPLATE GENERATOR\n\n\nMustache for PHP \nBobTheCow\n\n\nGenerateWP \nGenerate for WordPress Developers\n\n\nDocs\n\n\nDeveloper Plugin: Essential for WordPress Theme Developemnt\n\n\nHow to Build a Wordpress Plugin\n\n\n\n\n\n\n\n\nConfigure plugin\n\n\n\n\nCreate \ncomposer.json\n file in root directory.\n\n\nAdd \n\"type\": \"wordpress-plugin\"\n to get composer to install it in the wordpress plugin directory\n\n\n\n\n{\n  \"name\": \"\",\n  \"description\": \"\",\n  \"authors\": [\n    {\n      \"name\": \"Johan Martin\",\n      \"homepage\": \"http://www.johan-martin.com\",\n      \"role\": \"developer\"\n    }\n  ],\n  \"keywords\":[\n    \"Wordpress\",\n    \"Plug-in\",\n  ],\n  \"type\": \"wordpress-plugin\"\n}\n\n\n\n\nMustache for templating\n\n\n\n\nAdd \nmustache\n for templating.\n\n\ncomposer require mustache\\mustache",
            "title": "Plugin Dev"
        },
        {
            "location": "/php/wordpress/plugin development/#building-a-custom-wordpress-plugin",
            "text": "",
            "title": "Building a custom wordpress plugin."
        },
        {
            "location": "/php/wordpress/plugin development/#resources",
            "text": "Boilerplate template -  WORDPRESS PLUGIN BOILERPLATE GENERATOR  Mustache for PHP  BobTheCow  GenerateWP  Generate for WordPress Developers  Docs  Developer Plugin: Essential for WordPress Theme Developemnt  How to Build a Wordpress Plugin",
            "title": "Resources"
        },
        {
            "location": "/php/wordpress/plugin development/#configure-plugin",
            "text": "Create  composer.json  file in root directory.  Add  \"type\": \"wordpress-plugin\"  to get composer to install it in the wordpress plugin directory   {\n  \"name\": \"\",\n  \"description\": \"\",\n  \"authors\": [\n    {\n      \"name\": \"Johan Martin\",\n      \"homepage\": \"http://www.johan-martin.com\",\n      \"role\": \"developer\"\n    }\n  ],\n  \"keywords\":[\n    \"Wordpress\",\n    \"Plug-in\",\n  ],\n  \"type\": \"wordpress-plugin\"\n}",
            "title": "Configure plugin"
        },
        {
            "location": "/php/wordpress/plugin development/#mustache-for-templating",
            "text": "Add  mustache  for templating.  composer require mustache\\mustache",
            "title": "Mustache for templating"
        },
        {
            "location": "/php/wordpress/themes/",
            "text": "Theme Development with Wordpress\n\n\nResources/Articles\n\n\nUsing a template engine\n\n\n\n\nUsing Templating Engines to Streamline WordPress Theme Development\n\n\nTimber\n - Twig template engine\n\n\nThemeAwsome\n - Foundation theme for wordpress.",
            "title": "Theme Dev"
        },
        {
            "location": "/php/wordpress/themes/#theme-development-with-wordpress",
            "text": "",
            "title": "Theme Development with Wordpress"
        },
        {
            "location": "/php/wordpress/themes/#resourcesarticles",
            "text": "",
            "title": "Resources/Articles"
        },
        {
            "location": "/php/wordpress/themes/#using-a-template-engine",
            "text": "Using Templating Engines to Streamline WordPress Theme Development  Timber  - Twig template engine  ThemeAwsome  - Foundation theme for wordpress.",
            "title": "Using a template engine"
        },
        {
            "location": "/python/general/",
            "text": "Using Python\n\n\nPip\n\n\n\n\nError message: \n\"Can not perform a '--user' install. User site-packages are not visible in this virtualenv\"\n\n\nProblems \n~/Library/Application Support/pip/pip.conf\n contains \nuser=true\n\n\nResolution: Override the config in your virtualenv pip config file\n\n\nCreate \n$VIRTUAL_ENV/pip.conf\n\n\nPlace config information to override user=true\n\n\n\n\n\n\n\n\n[install]\nuser=false\n\n\n\n\n\n\nPip Configuration\n | \nStackOverflow Issue\n\n\n\n\nInstall pip as user\n\n\n\n\nget the get-pip.py script\n\n\nGet the script \nwget https://bootstrap.pypa.io/get-pip.py\n\n\nRun the script with user option \npytoh get-pip.py --user\n\n\n\n\n\n\nNow install all pip packages into user space. \npip install --user <package>\n\n\n\n\nSetup pip config file - want to set default settings for command line. Like always install in user space.\n\n\n\n\nCreate file \n$HOME/Library/Application Support/pip/pip.conf\n\n\nEdit file \n\n\n\n\n[Install]\nuser = true\n\n\n\n\nIssue with readline\n\n\n\n\nTerminal all screwed up after using python repl\n\n\nInstall python readline \npip install readline\n.\n Does not seem to work because installed in user space.\n\n\nUsing macports. Installed \npy35-readline\n. That seemed to work.",
            "title": "General"
        },
        {
            "location": "/python/general/#using-python",
            "text": "",
            "title": "Using Python"
        },
        {
            "location": "/python/general/#pip",
            "text": "Error message:  \"Can not perform a '--user' install. User site-packages are not visible in this virtualenv\"  Problems  ~/Library/Application Support/pip/pip.conf  contains  user=true  Resolution: Override the config in your virtualenv pip config file  Create  $VIRTUAL_ENV/pip.conf  Place config information to override user=true     [install]\nuser=false   Pip Configuration  |  StackOverflow Issue",
            "title": "Pip"
        },
        {
            "location": "/python/general/#install-pip-as-user",
            "text": "get the get-pip.py script  Get the script  wget https://bootstrap.pypa.io/get-pip.py  Run the script with user option  pytoh get-pip.py --user    Now install all pip packages into user space.  pip install --user <package>",
            "title": "Install pip as user"
        },
        {
            "location": "/python/general/#setup-pip-config-file-want-to-set-default-settings-for-command-line-like-always-install-in-user-space",
            "text": "Create file  $HOME/Library/Application Support/pip/pip.conf  Edit file    [Install]\nuser = true",
            "title": "Setup pip config file - want to set default settings for command line. Like always install in user space."
        },
        {
            "location": "/python/general/#issue-with-readline",
            "text": "Terminal all screwed up after using python repl  Install python readline  pip install readline .  Does not seem to work because installed in user space.  Using macports. Installed  py35-readline . That seemed to work.",
            "title": "Issue with readline"
        },
        {
            "location": "/python/flask/",
            "text": "Flask Notes\n\n\nResources\n\n\n\n\nFlask Site\n\n\n\n\nTools\n\n\n\n\nFrozen Flask\n - \nSite\n\n\nUsed for \nWineries Of the Sierra Foothills\n and personal site \nJohan Martin\n\n\nGenerate static site from flask site.\n\n\n\n\n\n\n\n\nDocs\n\n\n\n\nAwesome Flask",
            "title": "Flask"
        },
        {
            "location": "/python/flask/#flask-notes",
            "text": "",
            "title": "Flask Notes"
        },
        {
            "location": "/python/flask/#resources",
            "text": "Flask Site",
            "title": "Resources"
        },
        {
            "location": "/python/flask/#tools",
            "text": "Frozen Flask  -  Site  Used for  Wineries Of the Sierra Foothills  and personal site  Johan Martin  Generate static site from flask site.",
            "title": "Tools"
        },
        {
            "location": "/python/flask/#docs",
            "text": "Awesome Flask",
            "title": "Docs"
        },
        {
            "location": "/python/research/",
            "text": "Python Research and Resources",
            "title": "Research"
        },
        {
            "location": "/python/research/#python-research-and-resources",
            "text": "",
            "title": "Python Research and Resources"
        },
        {
            "location": "/ruby/",
            "text": "Ruby Notes\n\n\nUsing RVM to install Ruby after upgrading OS x\n\n\n\n\nError message: \ndyld: Symbol not found: _clock_gettime\n\n\nSolution \nThis worked for me\n: \nxcode-select --install\n - Installed command line clients from os x.\n\n\n\n\nUnable to run a command from a gem when installed with \ngem install\n\n\n\n\nExample: \ngem install cocoapods\n. Expect to use \npod\n as a commandline client.\n\n\nSolution: \nrvm use ruby-{current}\n\n\nProblem related to rvm not setting up a default ruby.",
            "title": "Ruby"
        },
        {
            "location": "/ruby/#ruby-notes",
            "text": "",
            "title": "Ruby Notes"
        },
        {
            "location": "/ruby/#using-rvm-to-install-ruby-after-upgrading-os-x",
            "text": "Error message:  dyld: Symbol not found: _clock_gettime  Solution  This worked for me :  xcode-select --install  - Installed command line clients from os x.",
            "title": "Using RVM to install Ruby after upgrading OS x"
        },
        {
            "location": "/ruby/#unable-to-run-a-command-from-a-gem-when-installed-with-gem-install",
            "text": "Example:  gem install cocoapods . Expect to use  pod  as a commandline client.  Solution:  rvm use ruby-{current}  Problem related to rvm not setting up a default ruby.",
            "title": "Unable to run a command from a gem when installed with gem install"
        },
        {
            "location": "/java/",
            "text": "Java Notes\n\n\n\n\nDetermine location of Java on Mac OS X\n\n\necho $(/usr/libexec/java_home)\n\n\n\n\n\n\nUsing Ivy with Ant\n\n\nDownload \nApache Ivy\n\n\nPut files into ant/lib directory.\n\n\nLib directory at \n~/.ant/lib\n - Using sdkman to manage Ant.",
            "title": "Java"
        },
        {
            "location": "/java/#java-notes",
            "text": "Determine location of Java on Mac OS X  echo $(/usr/libexec/java_home)    Using Ivy with Ant  Download  Apache Ivy  Put files into ant/lib directory.  Lib directory at  ~/.ant/lib  - Using sdkman to manage Ant.",
            "title": "Java Notes"
        },
        {
            "location": "/spring/",
            "text": "Learning to use Spring\n\n\nSteps\n\n\n\n\nStart with maven\n\n\nmvn archetype:generate -DgroupId=za.co.catenare.tutorial -DartifactId=tutorial -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\n\n\ncd tutorial\n\n\nmvn package\n\n\njava -cp target/tutorial-1.0-SNAPSHOT.jar za.co.catenare.tutorial.App\n\n\nRuns the App",
            "title": "Spring"
        },
        {
            "location": "/spring/#learning-to-use-spring",
            "text": "",
            "title": "Learning to use Spring"
        },
        {
            "location": "/spring/#steps",
            "text": "Start with maven  mvn archetype:generate -DgroupId=za.co.catenare.tutorial -DartifactId=tutorial -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false  cd tutorial  mvn package  java -cp target/tutorial-1.0-SNAPSHOT.jar za.co.catenare.tutorial.App  Runs the App",
            "title": "Steps"
        },
        {
            "location": "/git/",
            "text": "Git notes\n\n\nUsing git for version control. Lessons learned.\n\n\nHow To\n\n\n\n\nGit tag\n\n\nAdding a tag\n\n\ngit tag v1.0\n\n\ngit push origin --tags\n - push to github\n\n\n\n\n\n\nDeleting tags\n\n\ngit tag -d v1.0\n\n\ngit push origin :refs/tags/v1.0\n\n\n\n\n\n\n\n\n\n\nNeed tags for composer\n\n\n\n\nGit Resources\n\n\n.gitignore\n\n\n\n\nResources\n\n\n.gitignore templates\n\n\nCollection of .gitignore templates\n\n\n\n\n\n\ngitignore.io\n\n\nGlobal .gitignore \nStackoverflow 7335420\n\n\n~/.config/git/ignore\n - default location\n\n\ngit config --global core.excludesfile '~/.gitignore'\n - set the location\n\n\n\n\nGit error message. Can't merge unrelated histories.\n\n\n\n\nAllow unrelated histories \nStackOverflow Issue\n\n\ngit pull remote branch --allow-unrelated-histories\n\n\n\n\nGit error trying to push when pull seems to work\n\n\nhint: Updates were rejected because a pushed branch tip is behind its remote\nhint: counterpart. Check out this branch and integrate the remote changes\nhint: (e.g. 'git pull ...') before pushing again.\n\n\n\n\n\n\nHint:\n \nRead hints\n\n\nCheckout out rejected branch. \ngit checkout master\n\n\ngit pull {remote} master --allow-unrelated-histories\n\n\n\n\n\n\nFix conflicts and commit\n\n\ngit push {remote} master\n\n\n\n\n\n\n\n\nRemoving sensitive data from git after having committed \nRemoving Sensitive Data - Github\n\n\n\n\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch {path/filename}' --prune-empty --tag-name-filter cat -- --all\n\n\ngit push github --force --all\n\n\nRemove the references\n\n\ngit for-each-ref --format='delete %(refname)' refs/original | git update-ref --stdin\n\n\ngit reflog expire --expire=now --all\n\n\n\n\ngit gc --prune=now\n\n\n\n\n\n\nNo guarantee that the data hasn't been downloaded or forked but at least it's removed going forward.\n\n\n\n\n\n\nGithub Markdown\n\n\n\n\nLanguages for code blocks - \nhighlights.js\n\n\nEmoji List - :bowtie \nEmoji Cheat Sheet",
            "title": "Git"
        },
        {
            "location": "/git/#git-notes",
            "text": "",
            "title": "Git notes"
        },
        {
            "location": "/git/#using-git-for-version-control-lessons-learned",
            "text": "",
            "title": "Using git for version control. Lessons learned."
        },
        {
            "location": "/git/#how-to",
            "text": "Git tag  Adding a tag  git tag v1.0  git push origin --tags  - push to github    Deleting tags  git tag -d v1.0  git push origin :refs/tags/v1.0      Need tags for composer",
            "title": "How To"
        },
        {
            "location": "/git/#git-resources",
            "text": "",
            "title": "Git Resources"
        },
        {
            "location": "/git/#gitignore",
            "text": "Resources  .gitignore templates  Collection of .gitignore templates    gitignore.io  Global .gitignore  Stackoverflow 7335420  ~/.config/git/ignore  - default location  git config --global core.excludesfile '~/.gitignore'  - set the location",
            "title": ".gitignore"
        },
        {
            "location": "/git/#git-error-message-cant-merge-unrelated-histories",
            "text": "Allow unrelated histories  StackOverflow Issue  git pull remote branch --allow-unrelated-histories",
            "title": "Git error message. Can't merge unrelated histories."
        },
        {
            "location": "/git/#git-error-trying-to-push-when-pull-seems-to-work",
            "text": "hint: Updates were rejected because a pushed branch tip is behind its remote\nhint: counterpart. Check out this branch and integrate the remote changes\nhint: (e.g. 'git pull ...') before pushing again.   Hint:   Read hints  Checkout out rejected branch.  git checkout master  git pull {remote} master --allow-unrelated-histories    Fix conflicts and commit  git push {remote} master",
            "title": "Git error trying to push when pull seems to work"
        },
        {
            "location": "/git/#removing-sensitive-data-from-git-after-having-committed-removing-sensitive-data-github",
            "text": "git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch {path/filename}' --prune-empty --tag-name-filter cat -- --all  git push github --force --all  Remove the references  git for-each-ref --format='delete %(refname)' refs/original | git update-ref --stdin  git reflog expire --expire=now --all   git gc --prune=now    No guarantee that the data hasn't been downloaded or forked but at least it's removed going forward.",
            "title": "Removing sensitive data from git after having committed Removing Sensitive Data - Github"
        },
        {
            "location": "/git/#github-markdown",
            "text": "Languages for code blocks -  highlights.js  Emoji List - :bowtie  Emoji Cheat Sheet",
            "title": "Github Markdown"
        },
        {
            "location": "/mobile/general/",
            "text": "Deciding on a framework for mobile development\n\n\nGoals\n\n\n\n\nRapid development.\n\n\nTrying to get a quick prototype up and running to test out the feasability of the project\n\n\n\n\n\n\nWeb initially\n\n\nCreate the equivalent of a mobile web site that can be packaged as a native app later. Can be a combination of both web and native.\n\n\n\n\n\n\nIOS first\n\n\nFocused on developing an IOS app. Will port to Android. Maybe to Windows based on the framework.\n\n\n\n\n\n\nWeb framework\n\n\nUse JavaScript, CSS, HTML for putting together project.\n\n\n\n\n\n\n\n\nTools\n\n\n\n\nApache Cordova - underlying tool for the hybrid platform.\n\n\nAngularJS - JavaScript framework that seems to be most portable to NativeScript. \n\n\nTypeScript - write JavaScript with enterprise tools.\n\n\n\n\nFrameworks\n\n\n\n\nIonic - Angular and typescript. Has an infrastructure around it. Can generate components with command line. \n\n\nFramework7 - Seems to have a variety of templates.\n\n\nOnsenUI - just not enough for me to bite.\n\n\n\n\nThinking\n\n\n\n\nStarting with Framework7 template tool. See how far we can get. Goal is to create a web site that will suffice as a prototype for mobile site.\n\n\nNot going to use Framework7. Uses less for css.\n\n\n\n\n\n\nGoing to try and use ionic framework.",
            "title": "General"
        },
        {
            "location": "/mobile/general/#deciding-on-a-framework-for-mobile-development",
            "text": "",
            "title": "Deciding on a framework for mobile development"
        },
        {
            "location": "/mobile/general/#goals",
            "text": "Rapid development.  Trying to get a quick prototype up and running to test out the feasability of the project    Web initially  Create the equivalent of a mobile web site that can be packaged as a native app later. Can be a combination of both web and native.    IOS first  Focused on developing an IOS app. Will port to Android. Maybe to Windows based on the framework.    Web framework  Use JavaScript, CSS, HTML for putting together project.",
            "title": "Goals"
        },
        {
            "location": "/mobile/general/#tools",
            "text": "Apache Cordova - underlying tool for the hybrid platform.  AngularJS - JavaScript framework that seems to be most portable to NativeScript.   TypeScript - write JavaScript with enterprise tools.",
            "title": "Tools"
        },
        {
            "location": "/mobile/general/#frameworks",
            "text": "Ionic - Angular and typescript. Has an infrastructure around it. Can generate components with command line.   Framework7 - Seems to have a variety of templates.  OnsenUI - just not enough for me to bite.",
            "title": "Frameworks"
        },
        {
            "location": "/mobile/general/#thinking",
            "text": "Starting with Framework7 template tool. See how far we can get. Goal is to create a web site that will suffice as a prototype for mobile site.  Not going to use Framework7. Uses less for css.    Going to try and use ionic framework.",
            "title": "Thinking"
        },
        {
            "location": "/mobile/mobile/",
            "text": "Mobile Notes\n\n\nMobile Prototyping Tools\n\n\n\n\nMarvel\n - Prototyping tool. Has a free tier.\n\n\nAxure\n - Has a free educational version.\n\n\nAquro\n - Has free tier.\n\n\nVectr\n - Free. Includes for web.\n\n\nInvision\n - Web and mobile prototype\n\n\nZeplin\n - Free for single project.\n\n\n\n\nWeb only\n\n\n\n\nCSS3 Animations\n - use for interactivity\n\n\nHammer\n - JavaScript library for touch.\n\n\n\n\nMobile Web UI Kits\n\n\n\n\nFramework7\n\n\nUIKit\n\n\nOnsenUI\n\n\nAura\n - Java backen\n\n\nAura Documentation\n\n\n\n\n\n\nMobile Angular UI\n\n\nRatchet\n\n\n\n\nNative Kits\n\n\n\n\nNativeScript\n\n\nAppCelerator\n\n\n\n\nHybrid Kits\n\n\n\n\nIonic 2\n - Uses Angular\n\n\nPhoneGap\n - uses Cordova\n\n\nCordova\n - Underlying tool for most hybrid kits\n\n\n\n\nLibraries\n\n\n\n\nHammer\n - JavaScript library for touch.\n\n\nAngular\n - Library that seems to be the underlying framework for most hybrid apps.\n\n\nZepto\n - replacement for jquery.\n\n\n\n\nTools\n\n\n\n\nGoogle Developer Tools\n\n\nLimeJS\n - \nWeb Page\n - Game framework.\n\n\n\n\nServices\n\n\n\n\nGoogel Firebase\n\n\nKeen IO\n - api for event data\n\n\n\n\nUI Kit Templates\n\n\n\n\nUpLabs\n - UI kit market.\n\n\n\n\nAgencies\n\n\n\n\nFamous\n\n\n\n\nOnline App Template Building Tools\n\n\n\n\nAppInstitute\n\n\nAppMachine\n\n\nAppMakr\n\n\nAppYourself\n\n\nAppery\n\n\nCreator\n\n\nSwiftic\n\n\nKinvey\n\n\nApp Press\n - Code free app development\n\n\nEachScape\n - Drag and drop interfaces\n\n\niBuildApp\n - Online app creator\n\n\nViziApps\n - Create mobile apps\n\n\nAppGyver\n - App gyver",
            "title": "Research"
        },
        {
            "location": "/mobile/mobile/#mobile-notes",
            "text": "",
            "title": "Mobile Notes"
        },
        {
            "location": "/mobile/mobile/#mobile-prototyping-tools",
            "text": "Marvel  - Prototyping tool. Has a free tier.  Axure  - Has a free educational version.  Aquro  - Has free tier.  Vectr  - Free. Includes for web.  Invision  - Web and mobile prototype  Zeplin  - Free for single project.",
            "title": "Mobile Prototyping Tools"
        },
        {
            "location": "/mobile/mobile/#web-only",
            "text": "CSS3 Animations  - use for interactivity  Hammer  - JavaScript library for touch.",
            "title": "Web only"
        },
        {
            "location": "/mobile/mobile/#mobile-web-ui-kits",
            "text": "Framework7  UIKit  OnsenUI  Aura  - Java backen  Aura Documentation    Mobile Angular UI  Ratchet",
            "title": "Mobile Web UI Kits"
        },
        {
            "location": "/mobile/mobile/#native-kits",
            "text": "NativeScript  AppCelerator",
            "title": "Native Kits"
        },
        {
            "location": "/mobile/mobile/#hybrid-kits",
            "text": "Ionic 2  - Uses Angular  PhoneGap  - uses Cordova  Cordova  - Underlying tool for most hybrid kits",
            "title": "Hybrid Kits"
        },
        {
            "location": "/mobile/mobile/#libraries",
            "text": "Hammer  - JavaScript library for touch.  Angular  - Library that seems to be the underlying framework for most hybrid apps.  Zepto  - replacement for jquery.",
            "title": "Libraries"
        },
        {
            "location": "/mobile/mobile/#tools",
            "text": "Google Developer Tools  LimeJS  -  Web Page  - Game framework.",
            "title": "Tools"
        },
        {
            "location": "/mobile/mobile/#services",
            "text": "Googel Firebase  Keen IO  - api for event data",
            "title": "Services"
        },
        {
            "location": "/mobile/mobile/#ui-kit-templates",
            "text": "UpLabs  - UI kit market.",
            "title": "UI Kit Templates"
        },
        {
            "location": "/mobile/mobile/#agencies",
            "text": "Famous",
            "title": "Agencies"
        },
        {
            "location": "/mobile/mobile/#online-app-template-building-tools",
            "text": "AppInstitute  AppMachine  AppMakr  AppYourself  Appery  Creator  Swiftic  Kinvey  App Press  - Code free app development  EachScape  - Drag and drop interfaces  iBuildApp  - Online app creator  ViziApps  - Create mobile apps  AppGyver  - App gyver",
            "title": "Online App Template Building Tools"
        },
        {
            "location": "/mobile/mobilenotes/",
            "text": "Mobile Device Development Notes\n\n\nAndroid\n\n\n\n\nGoogle Tools\n\n\nAndroid Studio\n\n\n\n\n\n\n\n\nSolutions\n\n\n\n\nProblem:\n Launching Android SDK Manager without going through Atom Studio\n\n\n~/Library/Android/sdk/tools/android\n\n\nFor AVD\n \n~/Library/Android/sdk/tools/android avd\n\n\nStackOverflow\n\n\nLauch AVD - \nStackOverflow\n\n\n\n\n\n\n\n\nIOS\n\n\nIOS Development Notes\n\n\n\n\nCocoapods\n\n\nIssue: \nUnable to add a source with url https://github.com/CocoaPods/Specs.git named master. You can try adding it manually in ~/.cocoapods/repos or via pod repo add\n\n\nStackOverflow\n\n\n\n\n\n\n\n\n    cd ~/.cocoapods/repos\n    git clone git://github.com/CocoaPods/Specs.git master\n    pod install --no-repo-update --verbose\n\n\n\n\n\n\nActual issue: I'm in South Africa and it was taking forever to do the initial repo specs checkout. Doing git clone git:/github.com/CocoaPods/Specs.git master into ~/.cocoapods/repos resolved the problem. Going forward, only has to update the repos, not completely download it.\n\n\n\n\nResources\n\n\n\n\nAndroid Developer - Google\n)\n\n\nSome Teaching Notes - \n\n\n\n\nTools\n\n\n\n\nFastlane\n - release tool for mobile app.\n\n\nApp Inventor\n\n\nCocos2d-x\n - IOS Game dev tools.",
            "title": "Mobile Dev Notes"
        },
        {
            "location": "/mobile/mobilenotes/#mobile-device-development-notes",
            "text": "",
            "title": "Mobile Device Development Notes"
        },
        {
            "location": "/mobile/mobilenotes/#android",
            "text": "Google Tools  Android Studio",
            "title": "Android"
        },
        {
            "location": "/mobile/mobilenotes/#solutions",
            "text": "Problem:  Launching Android SDK Manager without going through Atom Studio  ~/Library/Android/sdk/tools/android  For AVD   ~/Library/Android/sdk/tools/android avd  StackOverflow  Lauch AVD -  StackOverflow",
            "title": "Solutions"
        },
        {
            "location": "/mobile/mobilenotes/#ios",
            "text": "",
            "title": "IOS"
        },
        {
            "location": "/mobile/mobilenotes/#ios-development-notes",
            "text": "Cocoapods  Issue:  Unable to add a source with url https://github.com/CocoaPods/Specs.git named master. You can try adding it manually in ~/.cocoapods/repos or via pod repo add  StackOverflow         cd ~/.cocoapods/repos\n    git clone git://github.com/CocoaPods/Specs.git master\n    pod install --no-repo-update --verbose   Actual issue: I'm in South Africa and it was taking forever to do the initial repo specs checkout. Doing git clone git:/github.com/CocoaPods/Specs.git master into ~/.cocoapods/repos resolved the problem. Going forward, only has to update the repos, not completely download it.",
            "title": "IOS Development Notes"
        },
        {
            "location": "/mobile/mobilenotes/#resources",
            "text": "Android Developer - Google )  Some Teaching Notes -",
            "title": "Resources"
        },
        {
            "location": "/mobile/mobilenotes/#tools",
            "text": "Fastlane  - release tool for mobile app.  App Inventor  Cocos2d-x  - IOS Game dev tools.",
            "title": "Tools"
        },
        {
            "location": "/mobile/ionic/",
            "text": "Ionic Development Notes\n\n\nTrying to figure out Ionic while building a prototype to demo via the web.\n\n\nNotes\n\n\n\n\nPushing site to gh-pages.\n\n\nRef: \nDeploying an Angular App to Github Pages\n\n\nIonic starter template includes the manifest and worker file by default.\n\n\nUse the ionic build scripts to create the web version of your app.\n\n\nInstall \nangular-cli-ghpages\n globally\n\n\nnpm install --global angular-cli-ghpages\n\n\n\n\n\n\nBuild ionic app with base-href to github gh-url for your username\n\n\nnpm run ionic:build --prod --base-href \"https://<username>.github.io/<repository>/\"\n\n\n\n\n\n\nPush to gh-pages. \nngh --dir www\n - have to use \nwww\n because the script looks for the \ndist\n folder by default.",
            "title": "Ionic"
        },
        {
            "location": "/mobile/ionic/#ionic-development-notes",
            "text": "Trying to figure out Ionic while building a prototype to demo via the web.",
            "title": "Ionic Development Notes"
        },
        {
            "location": "/mobile/ionic/#notes",
            "text": "Pushing site to gh-pages.  Ref:  Deploying an Angular App to Github Pages  Ionic starter template includes the manifest and worker file by default.  Use the ionic build scripts to create the web version of your app.  Install  angular-cli-ghpages  globally  npm install --global angular-cli-ghpages    Build ionic app with base-href to github gh-url for your username  npm run ionic:build --prod --base-href \"https://<username>.github.io/<repository>/\"    Push to gh-pages.  ngh --dir www  - have to use  www  because the script looks for the  dist  folder by default.",
            "title": "Notes"
        },
        {
            "location": "/cms/",
            "text": "Content management resources\n\n\n\n\nSymfony CMF\n - Uses symfony components.\n\n\n\n\nDatabases\n\n\nGraph Databases - potential as content databases\n\n\n\n\nneo4j\n\n\norientdb",
            "title": "Content Management"
        },
        {
            "location": "/cms/#content-management-resources",
            "text": "Symfony CMF  - Uses symfony components.",
            "title": "Content management resources"
        },
        {
            "location": "/cms/#databases",
            "text": "",
            "title": "Databases"
        },
        {
            "location": "/cms/#graph-databases-potential-as-content-databases",
            "text": "neo4j  orientdb",
            "title": "Graph Databases - potential as content databases"
        },
        {
            "location": "/reporting/",
            "text": "Reporting Server\n\n\nBirt\n\n\nCurrently using Birt for generating reports and invoices for the child center.\n* Setup\n  1. Download Birt report designer\n  1. Create report using designer.\n    * Connect to database using jdbc connector\n  1. Built-in report generator - create PDF versions of report.\n\n\nJasper\n\n\n\n\nSeems to have more moving parts.\n\n\nComes with a server component.\n\n\n\n\nCurrently using Birt to generate invoices.\n\n\n\n\nAll data in postgres DB\n\n\nConnect to postgres DB via jdbc\n\n\nOne view and sql queries to populate the reports\n\n\nSeems to work okay now.\n\n\n\n\nGoals\n\n\n\n\nMobile view of reports. Web based mobile.\n\n\nGenerate reports on demand. Always most relevant data\n\n\nGenerate invoices that will be sent via email.\n\n\nEnable reports for printing. Hardcopies are always nice.\n\n\nWant to spend time desigining the report but only have to do it once. Easier with a graphic editor than trying to mangle XML, JSON, etc.\n\n\nWant to chart.\n\n\n\n\nIssue with Eclipse (starting up report server)\n\n\n\n\nEclipse Wiki\n\n\nFix issue to set explicit JVM for Eclipse.",
            "title": "Reporting"
        },
        {
            "location": "/reporting/#reporting-server",
            "text": "",
            "title": "Reporting Server"
        },
        {
            "location": "/reporting/#birt",
            "text": "Currently using Birt for generating reports and invoices for the child center.\n* Setup\n  1. Download Birt report designer\n  1. Create report using designer.\n    * Connect to database using jdbc connector\n  1. Built-in report generator - create PDF versions of report.",
            "title": "Birt"
        },
        {
            "location": "/reporting/#jasper",
            "text": "Seems to have more moving parts.  Comes with a server component.",
            "title": "Jasper"
        },
        {
            "location": "/reporting/#currently-using-birt-to-generate-invoices",
            "text": "All data in postgres DB  Connect to postgres DB via jdbc  One view and sql queries to populate the reports  Seems to work okay now.",
            "title": "Currently using Birt to generate invoices."
        },
        {
            "location": "/reporting/#goals",
            "text": "Mobile view of reports. Web based mobile.  Generate reports on demand. Always most relevant data  Generate invoices that will be sent via email.  Enable reports for printing. Hardcopies are always nice.  Want to spend time desigining the report but only have to do it once. Easier with a graphic editor than trying to mangle XML, JSON, etc.  Want to chart.",
            "title": "Goals"
        },
        {
            "location": "/reporting/#issue-with-eclipse-starting-up-report-server",
            "text": "Eclipse Wiki  Fix issue to set explicit JVM for Eclipse.",
            "title": "Issue with Eclipse (starting up report server)"
        },
        {
            "location": "/docs/",
            "text": "Creating Project Documentation\n\n\nUsing \nMkDocs\n\n\n\n\nUses markdown.\n\n\nWorks with github pages.\n\n\nEvery project will have their own documentation\n\n\nStyleguide should be included (frontend)\n\n\nProject goals and requirements\n\n\nNotes about development\n\n\nSetup/install instructions\n\n\nResolution to issues (ongoing FAQ for the projects)\n\n\n\n\n\n\nDocumentation pages stay in gh-pages branch.\n\n\n\n\nSetup\n\n\n\n\nMake virtual environment for python - \nmkvirtualenv -a . docsdirectory\n\n\nInstall requirements - \npip install mkdocs pymdown-extensions pygments mkdocs-material\n\n\nCreate mkdocs project - \nmkdocs new <project>\n\n\nEnter into the project\n\n\nEdit the \nmkdocs.yml\n file\n\n\n\n\nUsing\n\n\n\n\nmkdocs serve\n - local development server \nhttp:\\localhost:8000\n\n\nmkdocs gh-deploy\n - build docs and push to gh-pages repo in github after committing.\n\n\n\n\nConfig file - \nmkdocs.yml\n\n\nsite_name: Development Notes for Johan Martin\nrepo_url: https://github.com/catenare/devnotes\nsite_description: Notes tracking for developing different apps.\nsite_author: Johan Martin (http://www.johan-martin.com)\nrepo_name: 'GitHub'\nedit_uri: edit/master/md/\n# docs_dir: 'md'\n# site_dir: 'docs'\ncopyright: Johan Martin &copy; 2017\nmarkdown_extensions:\n  - pymdownx.tilde\ntheme: 'material'\npages:\n- Home: 'index.md'\n- Section:\n  - 'Page Sites': 'page.md'\n  - Section: \n      - sub1: 'sub1.md'\n      - sub2: 'sub2.md'\n\n\n\n\nMkDocs Notes\n\n\n\n\nDocumentation\n\n\nGithub\n\n\nadded \npymdownx.tilde\n extension to get strikethrough to work.\n\n\nUsing \nmkdocs gh-deploy\n to upload docs.\n\n\nAdditional setup notes\n\n\nSquidfunk - material theme\n\n\n\n\n\n\n\n\nInstalling Markdown Extensions\n\n\n\n\nPyMdown Extensions Documentation\n\n\nInstallation: \npip install pymdown-extensions\n\n\nUsing:\n\n\npymdownx.tilde\n\n\nmarkdown.extensions.def_list\n\n\n\n\n\n\n\n\nFixing Issues with MkDocs\n\n\n404 error for home page/front page - github gh-pages hosting.\n:   \nSeems like the home page has to point to an \"index.md\" page for it to work.\n\n\nImporting docs into Github\n\n\n\n\nghp-import\n\n\nAlready being used by MkDocs.\n\n\nWould like to use with Sphinx if I convert my documentation to Sphinx.",
            "title": "Documentation"
        },
        {
            "location": "/docs/#creating-project-documentation",
            "text": "",
            "title": "Creating Project Documentation"
        },
        {
            "location": "/docs/#using-mkdocs",
            "text": "Uses markdown.  Works with github pages.  Every project will have their own documentation  Styleguide should be included (frontend)  Project goals and requirements  Notes about development  Setup/install instructions  Resolution to issues (ongoing FAQ for the projects)    Documentation pages stay in gh-pages branch.",
            "title": "Using MkDocs"
        },
        {
            "location": "/docs/#setup",
            "text": "Make virtual environment for python -  mkvirtualenv -a . docsdirectory  Install requirements -  pip install mkdocs pymdown-extensions pygments mkdocs-material  Create mkdocs project -  mkdocs new <project>  Enter into the project  Edit the  mkdocs.yml  file",
            "title": "Setup"
        },
        {
            "location": "/docs/#using",
            "text": "mkdocs serve  - local development server  http:\\localhost:8000  mkdocs gh-deploy  - build docs and push to gh-pages repo in github after committing.",
            "title": "Using"
        },
        {
            "location": "/docs/#config-file-mkdocsyml",
            "text": "site_name: Development Notes for Johan Martin\nrepo_url: https://github.com/catenare/devnotes\nsite_description: Notes tracking for developing different apps.\nsite_author: Johan Martin (http://www.johan-martin.com)\nrepo_name: 'GitHub'\nedit_uri: edit/master/md/\n# docs_dir: 'md'\n# site_dir: 'docs'\ncopyright: Johan Martin &copy; 2017\nmarkdown_extensions:\n  - pymdownx.tilde\ntheme: 'material'\npages:\n- Home: 'index.md'\n- Section:\n  - 'Page Sites': 'page.md'\n  - Section: \n      - sub1: 'sub1.md'\n      - sub2: 'sub2.md'",
            "title": "Config file - mkdocs.yml"
        },
        {
            "location": "/docs/#mkdocs-notes",
            "text": "Documentation  Github  added  pymdownx.tilde  extension to get strikethrough to work.  Using  mkdocs gh-deploy  to upload docs.  Additional setup notes  Squidfunk - material theme",
            "title": "MkDocs Notes"
        },
        {
            "location": "/docs/#installing-markdown-extensions",
            "text": "PyMdown Extensions Documentation  Installation:  pip install pymdown-extensions  Using:  pymdownx.tilde  markdown.extensions.def_list",
            "title": "Installing Markdown Extensions"
        },
        {
            "location": "/docs/#fixing-issues-with-mkdocs",
            "text": "404 error for home page/front page - github gh-pages hosting.\n:    Seems like the home page has to point to an \"index.md\" page for it to work.",
            "title": "Fixing Issues with MkDocs"
        },
        {
            "location": "/docs/#importing-docs-into-github",
            "text": "ghp-import  Already being used by MkDocs.  Would like to use with Sphinx if I convert my documentation to Sphinx.",
            "title": "Importing docs into Github"
        },
        {
            "location": "/ops/vagrant/",
            "text": "Setup Virtualbox with Apline Linux\n\n\nResources\n\n\n\n\nAlpine Linux\n\n\nDocker Alpine Config \nfguillot/docker-alpine-nginx-php7\n\n\nVagrant Instructions\n\n\nPackaging the Box\n\n\nSetting up a ssh-server\n\n\nAlpineLinux VM under VirtualBox\n\n\n\n\nHost Machine\n\n\n\n\nInstall alpine plugin - \nvagrant plugin install vagrant-alpine\n\n\n\n\nInstructions\n\n\nDownload Alpine Linux distribution and install in VirtualBox\n\n\n\n\nAlpine Linux Downloads\n - Download Virtual Distribution for x86_64.\n\n\nVirtualBox Install\n\n\n1GB Ram, 8GB HD\n\n\nInstall Alpine Linux\n\n\nMount \nalpine-virt-3.6.1-x86_64.iso\n to start installation\n\n\nLogin with \nroot\n\n\nsetup-alpine\n to install\n\n\npoweroff\n to turn off the virtualbox\n\n\nRemove virtual iso\n\n\nSetup Alpine box\n\n\nUncomment extra repositories\n\n\nvi /etc/apk/repositories\n\n\n\n\n\n\napk update\n - get latest package list\n\n\napk upgrade\n - Upgrade to latest versions\n\n\napk add bash\n - Install base\n\n\napk add sudo\n - Add sudo\n\n\nadduser vagrant\n - vagrant user\n\n\nvi /etc/sudoers\n\n\nUse \nvisudo\n\n\nAdd line: \nvagrant ALL=(ALL) NOPASSWD: ALL\n - add sudo without password\n\n\n\n\n\n\nEdit */etc/ssh/sshd_config\n\n\nset \nUseDNS no\n\n\n\n\n\n\nSetup Virtualbox\n\n\nVirtualBox guest additions\n\n\necho \"http://nl.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n\n\napk add virtualbox-additions-grsec\n\n\napk add virtualbox-guest-additions-5.1.22-r2\n\n\necho vboxpci >> /etc/modules\n\n\necho vboxdrv >> /etc/modules\n\n\necho vboxnetflt >> /etc/modules\n\n\n\n\n\n\nreboot\n\n\n\n\nSetup Vagrant\n\n\n\n\nCreate Vagrant base\n\n\nvagrant package --base {virtualbox}\n\n\nvagrant box add alpine-linux package.box\n\n\nvagrant init alpine-linux\n\n\nInstall vagrant plugin for alpine - \nvagrant plugin install vagrant-alpine\n\n\nConfigure Vagrantfile \nmaier/packer-templates\n\n\n\n\n\n\n\n\n    Vagrant.configure(2) do |config|\n    config.vm.define 'alpine' do |alpine|\n        alpine.vm.box = 'maier/alpine-3.6-x86_64'\n        # alpine.ssh.username = 'vagrant'\n        # alpine.ssh.password = 'vagrant'\n\n        # NOTE:\n        #   there are *no* guest additions installed\n        #   for alpine linux - the guest additions\n        #   installer fails. once workarounds are\n        #   identified the vbga will be added\n        #   to the base box.\n        #\n        # since there are no vbga. if the vagrant-alpine plugin\n        # is installed it can at least configure the system to\n        # enable shared folders.\n        #\n        alpine.vm.synced_folder '.', '/vagrant', disabled: true\n        #\n        # after `vagrant plugin install vagrant-alpine`\n        # comment the disabled synced_folder line above and\n        # uncomment the following two lines\n        #\n        # alpine.vm.network 'private_network', ip: '192.168.100.10'\n        # alpine.vm.synced_folder '.', '/vagrant', type: 'nfs'\n\n        alpine.vm.provider 'virtualbox' do |vb|\n            # vb.gui = true\n            vb.name = 'Alpine'\n            vb.cpus = 1\n            vb.memory = 1024\n            vb.customize [\n                'modifyvm', :id,\n                '--natdnshostresolver1', 'on',\n                '--nic1', 'nat',\n                '--cableconnected1', 'on'\n            ]\n        end\n    end\nend\n\n\n\n\n\n\nMy Config\n\n\n\n\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"maier/alpine-3.6-x86_64\"\n  config.vm.box_check_update = false\n  config.vbguest.auto_update = false\n  config.vm.synced_folder \"./vmshared\", \"/vagrant_data\", disabled: true\n  config.vm.network 'private_network', ip: \"192.168.33.10\"\n  config.vm.synced_folder \".\", \"/vagrant_shared\", type: \"nfs\"\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.name = \"Maier Alpine\"\n    vb.cpus = 1\n    vb.memory = 1024\n    vb.customize [\n      'modifyvm', :id,\n      '--natdnshostresolver1', 'on',\n      '--nic1', 'nat',\n      '--cableconnected1', 'on'\n    ]\n  end\nend\n\n\n\n\n\n\nAdded \nconfig.vbguest.auto_update = false\n to eliminate it trying to update\n\n\nAdded \nconfig.vbguest.auto_update = false\n to not check for updates\n\n\nUsing nfs to share volumes\n\n\nvagrant up\n\n\n\n\nInstall packages\n\n\napk update && \\\napk add nginx bash ca-certificates s6 curl ssmtp php7 php7-phar php7-curl \\\nphp7-fpm php7-json php7-zlib php7-xml php7-dom php7-ctype php7-opcache php7-zip php7-iconv \\\nphp7-pdo php7-pdo_mysql php7-pdo_sqlite php7-pdo_pgsql php7-mbstring php7-session \\\nphp7-gd php7-mcrypt php7-openssl php7-sockets php7-posix php7-ldap php7-simplexml\n\n\n\n\nOther Notes\n\n\nMisc\n\n\n\n\nSearch for packages - \napk search {name}\n\n\n\n\nShutdown\n\n\n\n\npoweroff\n\n\nhalt\n\n\n\n\nAccessing services on the guest box\n\n\n\n\nSetup Port Forwarding\n\n\nssh - local port 2222 - guest host port - 22\n\n\nUse \nssh -p 2222 vagrant@127.0.0.1\n - will give you access to the guest box",
            "title": "Vagrant"
        },
        {
            "location": "/ops/vagrant/#setup-virtualbox-with-apline-linux",
            "text": "",
            "title": "Setup Virtualbox with Apline Linux"
        },
        {
            "location": "/ops/vagrant/#resources",
            "text": "Alpine Linux  Docker Alpine Config  fguillot/docker-alpine-nginx-php7  Vagrant Instructions  Packaging the Box  Setting up a ssh-server  AlpineLinux VM under VirtualBox",
            "title": "Resources"
        },
        {
            "location": "/ops/vagrant/#host-machine",
            "text": "Install alpine plugin -  vagrant plugin install vagrant-alpine",
            "title": "Host Machine"
        },
        {
            "location": "/ops/vagrant/#instructions",
            "text": "",
            "title": "Instructions"
        },
        {
            "location": "/ops/vagrant/#download-alpine-linux-distribution-and-install-in-virtualbox",
            "text": "Alpine Linux Downloads  - Download Virtual Distribution for x86_64.  VirtualBox Install  1GB Ram, 8GB HD  Install Alpine Linux  Mount  alpine-virt-3.6.1-x86_64.iso  to start installation  Login with  root  setup-alpine  to install  poweroff  to turn off the virtualbox  Remove virtual iso  Setup Alpine box  Uncomment extra repositories  vi /etc/apk/repositories    apk update  - get latest package list  apk upgrade  - Upgrade to latest versions  apk add bash  - Install base  apk add sudo  - Add sudo  adduser vagrant  - vagrant user  vi /etc/sudoers  Use  visudo  Add line:  vagrant ALL=(ALL) NOPASSWD: ALL  - add sudo without password    Edit */etc/ssh/sshd_config  set  UseDNS no    Setup Virtualbox  VirtualBox guest additions  echo \"http://nl.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories  apk add virtualbox-additions-grsec  apk add virtualbox-guest-additions-5.1.22-r2  echo vboxpci >> /etc/modules  echo vboxdrv >> /etc/modules  echo vboxnetflt >> /etc/modules    reboot",
            "title": "Download Alpine Linux distribution and install in VirtualBox"
        },
        {
            "location": "/ops/vagrant/#setup-vagrant",
            "text": "Create Vagrant base  vagrant package --base {virtualbox}  vagrant box add alpine-linux package.box  vagrant init alpine-linux  Install vagrant plugin for alpine -  vagrant plugin install vagrant-alpine  Configure Vagrantfile  maier/packer-templates         Vagrant.configure(2) do |config|\n    config.vm.define 'alpine' do |alpine|\n        alpine.vm.box = 'maier/alpine-3.6-x86_64'\n        # alpine.ssh.username = 'vagrant'\n        # alpine.ssh.password = 'vagrant'\n\n        # NOTE:\n        #   there are *no* guest additions installed\n        #   for alpine linux - the guest additions\n        #   installer fails. once workarounds are\n        #   identified the vbga will be added\n        #   to the base box.\n        #\n        # since there are no vbga. if the vagrant-alpine plugin\n        # is installed it can at least configure the system to\n        # enable shared folders.\n        #\n        alpine.vm.synced_folder '.', '/vagrant', disabled: true\n        #\n        # after `vagrant plugin install vagrant-alpine`\n        # comment the disabled synced_folder line above and\n        # uncomment the following two lines\n        #\n        # alpine.vm.network 'private_network', ip: '192.168.100.10'\n        # alpine.vm.synced_folder '.', '/vagrant', type: 'nfs'\n\n        alpine.vm.provider 'virtualbox' do |vb|\n            # vb.gui = true\n            vb.name = 'Alpine'\n            vb.cpus = 1\n            vb.memory = 1024\n            vb.customize [\n                'modifyvm', :id,\n                '--natdnshostresolver1', 'on',\n                '--nic1', 'nat',\n                '--cableconnected1', 'on'\n            ]\n        end\n    end\nend   My Config   Vagrant.configure(\"2\") do |config|\n  config.vm.box = \"maier/alpine-3.6-x86_64\"\n  config.vm.box_check_update = false\n  config.vbguest.auto_update = false\n  config.vm.synced_folder \"./vmshared\", \"/vagrant_data\", disabled: true\n  config.vm.network 'private_network', ip: \"192.168.33.10\"\n  config.vm.synced_folder \".\", \"/vagrant_shared\", type: \"nfs\"\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.name = \"Maier Alpine\"\n    vb.cpus = 1\n    vb.memory = 1024\n    vb.customize [\n      'modifyvm', :id,\n      '--natdnshostresolver1', 'on',\n      '--nic1', 'nat',\n      '--cableconnected1', 'on'\n    ]\n  end\nend   Added  config.vbguest.auto_update = false  to eliminate it trying to update  Added  config.vbguest.auto_update = false  to not check for updates  Using nfs to share volumes  vagrant up",
            "title": "Setup Vagrant"
        },
        {
            "location": "/ops/vagrant/#install-packages",
            "text": "apk update && \\\napk add nginx bash ca-certificates s6 curl ssmtp php7 php7-phar php7-curl \\\nphp7-fpm php7-json php7-zlib php7-xml php7-dom php7-ctype php7-opcache php7-zip php7-iconv \\\nphp7-pdo php7-pdo_mysql php7-pdo_sqlite php7-pdo_pgsql php7-mbstring php7-session \\\nphp7-gd php7-mcrypt php7-openssl php7-sockets php7-posix php7-ldap php7-simplexml",
            "title": "Install packages"
        },
        {
            "location": "/ops/vagrant/#other-notes",
            "text": "",
            "title": "Other Notes"
        },
        {
            "location": "/ops/vagrant/#misc",
            "text": "Search for packages -  apk search {name}",
            "title": "Misc"
        },
        {
            "location": "/ops/vagrant/#shutdown",
            "text": "poweroff  halt",
            "title": "Shutdown"
        },
        {
            "location": "/ops/vagrant/#accessing-services-on-the-guest-box",
            "text": "Setup Port Forwarding  ssh - local port 2222 - guest host port - 22  Use  ssh -p 2222 vagrant@127.0.0.1  - will give you access to the guest box",
            "title": "Accessing services on the guest box"
        },
        {
            "location": "/ops/docker/",
            "text": "Notes for docker\n\n\n\n\nNot using everyday so need instructions on how I use it\n\n\n\n\nStarting and using\n\n\n\n\ndocker-machine start default\n\n\nSet the environment\n\n\nConfigure Shell (Docker Toolbox on Mac)\n\n\neval \"$(docker-machine env default)\"\n\n\n\n\n\n\n\n\n\n\ndocker-machine config\n - verify can connect and pull info from the machine\n\n\n\n\nUse a base alpine image for docker\n\n\n\n\nOfficial Alpine Docker Image\n\n\nDocker Store\n\n\ndocker pull alpine\n\n\napk --no-cache add {package}\n\n\nDockerfile Example - avoids using \n--update\n and \nrm -rf /var/cache/apk/*\n\n\n\n\n  FROM alpine:latest\n  RUN apk add --no-cache nginx\n  EXPOSE 80\n  CMD [\"nginx\", \"-g\", \"daemon off;\"]",
            "title": "Docker"
        },
        {
            "location": "/ops/docker/#notes-for-docker",
            "text": "Not using everyday so need instructions on how I use it",
            "title": "Notes for docker"
        },
        {
            "location": "/ops/docker/#starting-and-using",
            "text": "docker-machine start default  Set the environment  Configure Shell (Docker Toolbox on Mac)  eval \"$(docker-machine env default)\"      docker-machine config  - verify can connect and pull info from the machine",
            "title": "Starting and using"
        },
        {
            "location": "/ops/docker/#use-a-base-alpine-image-for-docker",
            "text": "Official Alpine Docker Image  Docker Store  docker pull alpine  apk --no-cache add {package}  Dockerfile Example - avoids using  --update  and  rm -rf /var/cache/apk/*     FROM alpine:latest\n  RUN apk add --no-cache nginx\n  EXPOSE 80\n  CMD [\"nginx\", \"-g\", \"daemon off;\"]",
            "title": "Use a base alpine image for docker"
        },
        {
            "location": "/ops/amazon/",
            "text": "Working with Amazon (AWS)\n\n\nLightsail - virtual private server instances - $5 for 512gb instance/month\n\n\nSetting up SSH - trying to use my own ssh keys.\n\n\n\n\nLogging in\n\n\nChange key permissions. \nchmod 600 KEYFILE\n\n\nssh -i KEYFILE ubuntu@ip-address\n\n\n\n\n\n\n\n\nPHP Wordpress config\n\n\n\n\nPackages\n\n\nphp7.0 php7.0-cli php7.0-fpm php7.0-mysql php7.0-xml php7.0-mbstring php7.0-zip php7.0-gd php7.0-curl php-imagick mysql-server git nginx\n\n\nInstall \ncomposer\n.\n\n\nFollow instructions from composer\n\n\n\n\n\n\nConfigure nginx and php7.0-fpm\n\n\nnginx - configure default virtual environment\n\n\nEnable php7.0-fpm in configuration.\n\n\n\n\n\n\nCreate rsa key to share with bitbucket or github\n\n\nssh-keygen -t rsa\n - no password\n\n\n\n\n\n\nAdd a deployment key to github to pull code to server.\n\n\n\n\n\n\nConfigure nginx\n\n\nSetup mysql database\n\n\nDownload composer and wordpress command line.\n\n\ncomposer\n\n\nmv composer.phar /usr/local/bin/composer\n after install\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Admin\n\n\n\n\nRestart service\n\n\nUbuntu\n\n\nsudo nginx -t\n - test config\n\n\n\nsudo systemctl restart nginx\n\n\nsudo systemctl retart php7.0-fpm\n\n\n\n\n\n\n\n\nletsencrypt setup\n\n\n\n\nCertbot\n - Ubuntu\n\n\nPort 443 needs to be open\n\n\nDomains need to be in nginx.conf file (sites-enabled/default) file.\n\n\nPretty straightforward and easy to set up.",
            "title": "Amazon"
        },
        {
            "location": "/ops/amazon/#working-with-amazon-aws",
            "text": "",
            "title": "Working with Amazon (AWS)"
        },
        {
            "location": "/ops/amazon/#lightsail-virtual-private-server-instances-5-for-512gb-instancemonth",
            "text": "",
            "title": "Lightsail - virtual private server instances - $5 for 512gb instance/month"
        },
        {
            "location": "/ops/amazon/#setting-up-ssh-trying-to-use-my-own-ssh-keys",
            "text": "Logging in  Change key permissions.  chmod 600 KEYFILE  ssh -i KEYFILE ubuntu@ip-address",
            "title": "Setting up SSH - trying to use my own ssh keys."
        },
        {
            "location": "/ops/amazon/#php-wordpress-config",
            "text": "Packages  php7.0 php7.0-cli php7.0-fpm php7.0-mysql php7.0-xml php7.0-mbstring php7.0-zip php7.0-gd php7.0-curl php-imagick mysql-server git nginx  Install  composer .  Follow instructions from composer    Configure nginx and php7.0-fpm  nginx - configure default virtual environment  Enable php7.0-fpm in configuration.    Create rsa key to share with bitbucket or github  ssh-keygen -t rsa  - no password    Add a deployment key to github to pull code to server.    Configure nginx  Setup mysql database  Download composer and wordpress command line.  composer  mv composer.phar /usr/local/bin/composer  after install",
            "title": "PHP Wordpress config"
        },
        {
            "location": "/ops/amazon/#server-admin",
            "text": "Restart service  Ubuntu  sudo nginx -t  - test config  sudo systemctl restart nginx  sudo systemctl retart php7.0-fpm",
            "title": "Server Admin"
        },
        {
            "location": "/ops/amazon/#letsencrypt-setup",
            "text": "Certbot  - Ubuntu  Port 443 needs to be open  Domains need to be in nginx.conf file (sites-enabled/default) file.  Pretty straightforward and easy to set up.",
            "title": "letsencrypt setup"
        },
        {
            "location": "/ops/azure/",
            "text": "Azure Notes\n\n\nUsing Active Directory for remote login\n\n\nRegister a new web application\n\n\n\n\nSelect \nAzure Active Directory\n\n\nChoose \nApp registrations\n\n\nClick on \nNew Application registration\n - current layout close to top toolbar.\n\n\nEnter the name\n\n\nApplication type - \nweb app/API\n\n\nSign-on Url\n\n\nEnd-point that will process and determine if the user is logged in.\n\n\nhttp://{wordpress-site}/wp-login.php\n is the endpoint for wordpress\n\n\n\n\n\n\n\n\nCreating keys for API access\n\n\n\n\nSelect \nAzure Active Directory\n\n\nClick on \nApp registrations\n\n\nClick on your app\n\n\nClick on \nAll Settings\n - current layout - bottom right corner.\n\n\nClick on \nKeys\n under \nApi Access\n\n\nUnder keys\n\n\nEnter a description\n\n\nChoose duration\n\n\nClick \nsave\n icon\n\n\nCopy secret key. Will go away when navigating away from this page.\n\n\n\n\n\n\nSettings\n\n\nApplication ID\n - \nCan also be referred to as the Client ID. Refers to your application so Azure can tell where to authenticate.\n\n\nAPI Key\n - \nGenerate under All Settings -> Api Key\n\n\n\n\n\n\n\n\nDetermine Tenant ID\n\n\n\n\nTenant Id is the the id of the Azure Directory you are using.\n\n\nClick on \nAzure Active Directory\n - far right column under main list of services\n\n\nClick on \nProperties\n\n\nDirectory ID\n is the same equivalent of \nTenant ID\n when referring to this Active Directory.",
            "title": "Azure"
        },
        {
            "location": "/ops/azure/#azure-notes",
            "text": "",
            "title": "Azure Notes"
        },
        {
            "location": "/ops/azure/#using-active-directory-for-remote-login",
            "text": "",
            "title": "Using Active Directory for remote login"
        },
        {
            "location": "/ops/azure/#register-a-new-web-application",
            "text": "Select  Azure Active Directory  Choose  App registrations  Click on  New Application registration  - current layout close to top toolbar.  Enter the name  Application type -  web app/API  Sign-on Url  End-point that will process and determine if the user is logged in.  http://{wordpress-site}/wp-login.php  is the endpoint for wordpress",
            "title": "Register a new web application"
        },
        {
            "location": "/ops/azure/#creating-keys-for-api-access",
            "text": "Select  Azure Active Directory  Click on  App registrations  Click on your app  Click on  All Settings  - current layout - bottom right corner.  Click on  Keys  under  Api Access  Under keys  Enter a description  Choose duration  Click  save  icon  Copy secret key. Will go away when navigating away from this page.    Settings  Application ID  -  Can also be referred to as the Client ID. Refers to your application so Azure can tell where to authenticate.  API Key  -  Generate under All Settings -> Api Key",
            "title": "Creating keys for API access"
        },
        {
            "location": "/ops/azure/#determine-tenant-id",
            "text": "Tenant Id is the the id of the Azure Directory you are using.  Click on  Azure Active Directory  - far right column under main list of services  Click on  Properties  Directory ID  is the same equivalent of  Tenant ID  when referring to this Active Directory.",
            "title": "Determine Tenant ID"
        },
        {
            "location": "/tools/",
            "text": "Developer Helper Tools\n\n\nServer Mock Tools\n\n\n\n\nMailCatcher\n - Localhost email intercept\n\n\nNgrok\n - Secure tunnel to localhost\n\n\n\n\nAPI Tools\n\n\n\n\nRAML\n\n\nSwagger\n\n\n\n\nAPI Mock Tools\n\n\n\n\nMockServer\n - Has Docker config\n\n\nWireMock\n - Java\n\n\nOsprey Mock Service\n - RAML mock service. 1.0 compatible.\n\n\nOsprey Service\n\n\nPrism\n - run locally\n\n\nSwagger-codegen\n - Has Docker Config\n\n\nImposter\n - Has Docker config\n\n\n\n\nMock Service\n\n\n\n\nMockbin\n - test, mock and track http requests & responses\n\n\n\n\nHow To - Mock API Server\n\n\n\n\nMock Rest API with JSON Server\n - Create your own mock API server with faker.js\n\n\nTesting External APIs with Mock Servers\n - Use python for testing\n\n\nGo Raml\n\n\n\n\nOther\n\n\n\n\nStandalone RAML API Mocking Tools Surface\n - Article - Mock tools\n\n\nRAML and Osprey - a Better Way to Build Mock APIs\n\n\nSandbox\n - online service for API mocking\n\n\n\n\nCreating a mock api server - node.js\n\n\n\n\nUsing \njson-server\n\n\nSetup\n\n\nCreate directory - \ntest_server\n\n\ntouch server.js\n - server startup file\n\n\nnpm init\n - create config file. Set \nserver.js\n as the start script.\n\n\nCreate \nserver.js\n file.\n\n\nnpm install faker json-server --save-dev\n\n\n\n\n\n\n\n\n    //server.js\n    const jsonServer = require('json-server')\n    const customers = require('./customers')\n    const server = jsonServer.create()\n    const router = jsonServer.router(customers())\n    const middlewares = jsonServer.defaults()\n\n    server.use(middlewares)\n    server.use(router)\n    server.listen(3000, () => {\n      console.log('JSON Server is running')\n    })\n\n    //customer.js\n    var faker = require('faker')\n    function generateCustomers () {\n        var customers = []\n        for (var id = 0; id < 50; id++) {\n\n        var firstName = faker.name.firstName();\n        var lastName = faker.name.lastName();\n        var phoneNumber = faker.phone.phoneNumberFormat();\n\n        customers.push({\n            \"id\": id,\n            \"first_name\": firstName,\n            \"last_name\": lastName,\n            \"phone\": phoneNumber\n        })\n    }\n    return { \"customers\": customers}\n    }\n    module.exports = generateCustomers\n\n\n\n\nTesting Framework\n\n\n\n\nGalen Framework\n - Look and feel testing for responsive sites.",
            "title": "Mock and API Tools"
        },
        {
            "location": "/tools/#developer-helper-tools",
            "text": "",
            "title": "Developer Helper Tools"
        },
        {
            "location": "/tools/#server-mock-tools",
            "text": "MailCatcher  - Localhost email intercept  Ngrok  - Secure tunnel to localhost",
            "title": "Server Mock Tools"
        },
        {
            "location": "/tools/#api-tools",
            "text": "RAML  Swagger",
            "title": "API Tools"
        },
        {
            "location": "/tools/#api-mock-tools",
            "text": "MockServer  - Has Docker config  WireMock  - Java  Osprey Mock Service  - RAML mock service. 1.0 compatible.  Osprey Service  Prism  - run locally  Swagger-codegen  - Has Docker Config  Imposter  - Has Docker config",
            "title": "API Mock Tools"
        },
        {
            "location": "/tools/#mock-service",
            "text": "Mockbin  - test, mock and track http requests & responses",
            "title": "Mock Service"
        },
        {
            "location": "/tools/#how-to-mock-api-server",
            "text": "Mock Rest API with JSON Server  - Create your own mock API server with faker.js  Testing External APIs with Mock Servers  - Use python for testing  Go Raml",
            "title": "How To - Mock API Server"
        },
        {
            "location": "/tools/#other",
            "text": "Standalone RAML API Mocking Tools Surface  - Article - Mock tools  RAML and Osprey - a Better Way to Build Mock APIs  Sandbox  - online service for API mocking",
            "title": "Other"
        },
        {
            "location": "/tools/#creating-a-mock-api-server-nodejs",
            "text": "Using  json-server  Setup  Create directory -  test_server  touch server.js  - server startup file  npm init  - create config file. Set  server.js  as the start script.  Create  server.js  file.  npm install faker json-server --save-dev         //server.js\n    const jsonServer = require('json-server')\n    const customers = require('./customers')\n    const server = jsonServer.create()\n    const router = jsonServer.router(customers())\n    const middlewares = jsonServer.defaults()\n\n    server.use(middlewares)\n    server.use(router)\n    server.listen(3000, () => {\n      console.log('JSON Server is running')\n    })\n\n    //customer.js\n    var faker = require('faker')\n    function generateCustomers () {\n        var customers = []\n        for (var id = 0; id < 50; id++) {\n\n        var firstName = faker.name.firstName();\n        var lastName = faker.name.lastName();\n        var phoneNumber = faker.phone.phoneNumberFormat();\n\n        customers.push({\n            \"id\": id,\n            \"first_name\": firstName,\n            \"last_name\": lastName,\n            \"phone\": phoneNumber\n        })\n    }\n    return { \"customers\": customers}\n    }\n    module.exports = generateCustomers",
            "title": "Creating a mock api server - node.js"
        },
        {
            "location": "/tools/#testing-framework",
            "text": "Galen Framework  - Look and feel testing for responsive sites.",
            "title": "Testing Framework"
        },
        {
            "location": "/cmd/cmd/",
            "text": "Command Line Notes\n\n\nUnix like commands\n\n\n\n\nChange file attribute from hidden to unhidden\n\n\nchflags nohidden /path/to/file/or/files/\n\n\nDownloading files with wget\n\n\nUse \nwget -c\n or \nwget --continue\n to restart a stopped or aborted download",
            "title": "Command Line"
        },
        {
            "location": "/cmd/cmd/#command-line-notes",
            "text": "",
            "title": "Command Line Notes"
        },
        {
            "location": "/cmd/cmd/#unix-like-commands",
            "text": "Change file attribute from hidden to unhidden  chflags nohidden /path/to/file/or/files/  Downloading files with wget  Use  wget -c  or  wget --continue  to restart a stopped or aborted download",
            "title": "Unix like commands"
        },
        {
            "location": "/research/",
            "text": "Projects of interest\n\n\nWeb\n\n\nTools to watch\n\n\n\n\nVapor\n - Swift3 framework for web application development.\n\n\nElectrode\n - made by Walmart. ReactJS framework essentially.\n\n\nVue.js\n - another front-end framework.\n\n\n\n\nJavaScript\n\n\n\n\nelm\n\n\nTutorial\n\n\nAwesome list of Elm Tutorials\n\n\n\n\n\n\nGrapeJs\n - Web builder framework. JavaScript. Sites without coding. Integrate into own site.\n\n\nMonaco Editor\n - Microsoft javascript based code editor.\n\n\n\n\nAngular\n\n\n\n\nTools\n\n\nAngular Augury\n - debug and profile angular 2 apps\n\n\nChrome extension\n\n\n\n\n\n\nLists\n\n\nAwesome Angular\n\n\n\n\n\n\n\n\nWeb Templates\n\n\n\n\nFlakes Admin Template\n - Admin front-end template.\n\n\nFramework7\n - mobile web template\n\n\n\n\nPython\n\n\n\n\nPython books online \nInvent with python\n\n\n\n\nResource Lists\n\n\n\n\nAwesome Awesome List\n - List of lists\n\n\nAwesome Weekly\n - \nGithub\n\n\nAwesome Serverless List\n\n\nAwesome Python\n\n\nAwesome Boilerplates & Templates\n\n\nAwesome Elm Tutorials\n\n\nAwesome Flask\n\n\nAwesome PHP\n\n\nAwesome Angular\n\n\nAwesome Angular Components\n\n\nAwesome IOS\n - \nmain site\n\n\nAwesome Kotlin\n\n\nFront-end Dev Bookmarks\n\n\nFront End Directory\n\n\n\n\n\n\nraywenderlich.com\n - IOS/development resources\n\n\n\n\nAlgorithm Resources\n\n\n\n\nGrokking Algorithms Source\n\n\nElementary Algorithms and Data Structures\n\n\nThe Coders Hub\n - Algorithms in multiple languages\n\n\n\n\nOther\n\n\n\n\nBoomerang\n - Data conversion and synchronization\n\n\nUnison\n - File sync utility\n\n\n\n\nServerless\n\n\n\n\nServerless\n - serverless framework\n\n\n\n\nMobile Prototyping Tools\n\n\n\n\nMarvel\n - Prototyping tool\n\n\nCSS3 Animations\n - use for interactivity\n\n\nHammer\n - JavaScript library for touch.\n\n\nAxure\n - Has a free educational version.",
            "title": "General"
        },
        {
            "location": "/research/#projects-of-interest",
            "text": "",
            "title": "Projects of interest"
        },
        {
            "location": "/research/#web",
            "text": "",
            "title": "Web"
        },
        {
            "location": "/research/#tools-to-watch",
            "text": "Vapor  - Swift3 framework for web application development.  Electrode  - made by Walmart. ReactJS framework essentially.  Vue.js  - another front-end framework.",
            "title": "Tools to watch"
        },
        {
            "location": "/research/#javascript",
            "text": "elm  Tutorial  Awesome list of Elm Tutorials    GrapeJs  - Web builder framework. JavaScript. Sites without coding. Integrate into own site.  Monaco Editor  - Microsoft javascript based code editor.",
            "title": "JavaScript"
        },
        {
            "location": "/research/#angular",
            "text": "Tools  Angular Augury  - debug and profile angular 2 apps  Chrome extension    Lists  Awesome Angular",
            "title": "Angular"
        },
        {
            "location": "/research/#web-templates",
            "text": "Flakes Admin Template  - Admin front-end template.  Framework7  - mobile web template",
            "title": "Web Templates"
        },
        {
            "location": "/research/#python",
            "text": "Python books online  Invent with python",
            "title": "Python"
        },
        {
            "location": "/research/#resource-lists",
            "text": "Awesome Awesome List  - List of lists  Awesome Weekly  -  Github  Awesome Serverless List  Awesome Python  Awesome Boilerplates & Templates  Awesome Elm Tutorials  Awesome Flask  Awesome PHP  Awesome Angular  Awesome Angular Components  Awesome IOS  -  main site  Awesome Kotlin  Front-end Dev Bookmarks  Front End Directory    raywenderlich.com  - IOS/development resources",
            "title": "Resource Lists"
        },
        {
            "location": "/research/#algorithm-resources",
            "text": "Grokking Algorithms Source  Elementary Algorithms and Data Structures  The Coders Hub  - Algorithms in multiple languages",
            "title": "Algorithm Resources"
        },
        {
            "location": "/research/#other",
            "text": "Boomerang  - Data conversion and synchronization  Unison  - File sync utility",
            "title": "Other"
        },
        {
            "location": "/research/#serverless",
            "text": "Serverless  - serverless framework",
            "title": "Serverless"
        },
        {
            "location": "/research/#mobile-prototyping-tools",
            "text": "Marvel  - Prototyping tool  CSS3 Animations  - use for interactivity  Hammer  - JavaScript library for touch.  Axure  - Has a free educational version.",
            "title": "Mobile Prototyping Tools"
        },
        {
            "location": "/teach/",
            "text": "Teaching web development\n\n\nTeaching Tools\n\n\nEclipse Che\n\n\n\n\nProvide all students with a running learner environment.\n\n\nAllow them to develop without the need for a regular machine.\n\n\nIn a place like South Africa, all they will need is a basic terminal or laptop.\n\n\nEveryone who wants to learn web development should have a computer/laptop available.\n\n\nWill use the browser as the tool of choice for learning development.\n\n\nSetting up with docker toolbox on Mac OS X\n\n\nbe sure to run \neval \"$(docker-machine env default)\"\n\n\ndocker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock -v /Users/johan/Projects/eclispseChe/data:/data eclipse/che start\n\n\nGot it to work on docker toolbox\n\n\n\n\n\n\n\n\nCloud9\n - In the cloud IDE tool. Free basic workspace.\n\n\nCreating learning environments\n\n\n\n\nOpen Edx\n\n\n\n\nOnline Resources\n\n\n\n\nCodenvy\n\n\nCreate workspace instances using eclipse che\n\n\n\n\n\n\nThimble\n\n\nWork with HTML code directly on a browser.\n\n\n\n\n\n\nCodepen\n\n\nFrontend development environment\n\n\n\n\n\n\nStanford CS Education Library\n\n\n\n\nCurriculum\n\n\n\n\nThe Odin Project\n\n\nSite",
            "title": "Learning Systems"
        },
        {
            "location": "/teach/#teaching-web-development",
            "text": "",
            "title": "Teaching web development"
        },
        {
            "location": "/teach/#teaching-tools",
            "text": "",
            "title": "Teaching Tools"
        },
        {
            "location": "/teach/#eclipse-che",
            "text": "Provide all students with a running learner environment.  Allow them to develop without the need for a regular machine.  In a place like South Africa, all they will need is a basic terminal or laptop.  Everyone who wants to learn web development should have a computer/laptop available.  Will use the browser as the tool of choice for learning development.  Setting up with docker toolbox on Mac OS X  be sure to run  eval \"$(docker-machine env default)\"  docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock -v /Users/johan/Projects/eclispseChe/data:/data eclipse/che start  Got it to work on docker toolbox",
            "title": "Eclipse Che"
        },
        {
            "location": "/teach/#cloud9-in-the-cloud-ide-tool-free-basic-workspace",
            "text": "",
            "title": "Cloud9 - In the cloud IDE tool. Free basic workspace."
        },
        {
            "location": "/teach/#creating-learning-environments",
            "text": "Open Edx",
            "title": "Creating learning environments"
        },
        {
            "location": "/teach/#online-resources",
            "text": "Codenvy  Create workspace instances using eclipse che    Thimble  Work with HTML code directly on a browser.    Codepen  Frontend development environment    Stanford CS Education Library",
            "title": "Online Resources"
        },
        {
            "location": "/teach/#curriculum",
            "text": "The Odin Project  Site",
            "title": "Curriculum"
        },
        {
            "location": "/learning/angular/",
            "text": "Learning the Angular Framework\n\n\nResources\n\n\n\n\nAngular 2 Fundamentals\n - Online class with a really good introduction to Angular. Also check out the JavaScript Class. It has a really good introduction to \nWebpack\n\n\nGithub Repo - Retain App\n\n\nWebpack config is out of date (for the latest webpack)\n\n\n\n\n\n\nAngular Documentation\n\n\nAngular & Webpack\n\n\nGotchas:\n\n\nExtractTextWebpackPlugin\n & \n[Validation] ajv version mismatch with webpack #524\n\n\nfallbackloader\n should be \nfallback\n\n\nloader\n is now \nuse\n\n\nex: (old) \nExtractTextPlugin.extract({fallbackloader: 'style-loader', loader: 'css-loader?sourceMap'})\n should be (new) \nExtractTextPlugin.extract({fallback: 'style-loader', use: 'css-loader?sourceMap'})\n\n\n\n\n\n\n\n\nCannot find name 'require' templateUrl - StackOverflow\n\n\n\n\nnpm install --save-dev @types/node\n\n\n\n\nIn \ntsconfig.json\n \n\n\njson\n    \"types\": [\"node\"],\n    \"typeroots\": [\"./node_modules/@types\"]\n\n\n\n\n\n\nRestart \nwebpack-dev-server\n - \nnpm run server:dev\n\n        * \nNo Implicit Any\n - Change setting \n\"noImplicitAny\"\n in \ntsconfig.json\n to false and restart webpack dev server.\n        * \nTS2559: Type 'Headers' has no properties in common with type 'RequestOptionsArgs'.\n - \nRequestOptions\n require an object. \n{headers: this.headers}\n\n        * \nUncaught Error: Can't resolve all parameters for NoteService:\n - Issue with not having \n@Injectable()\n on noteservice.",
            "title": "Learning Angular"
        },
        {
            "location": "/learning/angular/#learning-the-angular-framework",
            "text": "",
            "title": "Learning the Angular Framework"
        },
        {
            "location": "/learning/angular/#resources",
            "text": "Angular 2 Fundamentals  - Online class with a really good introduction to Angular. Also check out the JavaScript Class. It has a really good introduction to  Webpack  Github Repo - Retain App  Webpack config is out of date (for the latest webpack)    Angular Documentation  Angular & Webpack  Gotchas:  ExtractTextWebpackPlugin  &  [Validation] ajv version mismatch with webpack #524  fallbackloader  should be  fallback  loader  is now  use  ex: (old)  ExtractTextPlugin.extract({fallbackloader: 'style-loader', loader: 'css-loader?sourceMap'})  should be (new)  ExtractTextPlugin.extract({fallback: 'style-loader', use: 'css-loader?sourceMap'})     Cannot find name 'require' templateUrl - StackOverflow   npm install --save-dev @types/node   In  tsconfig.json    json\n    \"types\": [\"node\"],\n    \"typeroots\": [\"./node_modules/@types\"]    Restart  webpack-dev-server  -  npm run server:dev \n        *  No Implicit Any  - Change setting  \"noImplicitAny\"  in  tsconfig.json  to false and restart webpack dev server.\n        *  TS2559: Type 'Headers' has no properties in common with type 'RequestOptionsArgs'.  -  RequestOptions  require an object.  {headers: this.headers} \n        *  Uncaught Error: Can't resolve all parameters for NoteService:  - Issue with not having  @Injectable()  on noteservice.",
            "title": "Resources"
        },
        {
            "location": "/learning/angular/wordpress/",
            "text": "Using the Wordpress API with angular\n\n\n\n\nWant to use Foundation for creating my theme\n\n\nUse Amazon CDN for serving pages. Reduce latency in South Africa\n\n\nNot to keen on splitting up my theme for Wordpress.\n\n\n\n\nResources\n\n\n\n\nde Wordpress themes and angular articles\n\n\nWordpress API Angular Client\n\n\n\n\nTools\n\n\n\n\nPostman\n - Use to explore the Wordpress API\n\n\nWP REST API Docs\n\n\n\n\nNotes\n\n\n\n\nLocal site: \nhttp://paseo.demo/wp-json/wp/v2/posts\n - Access the REST API",
            "title": "Wordpress API & Angular"
        },
        {
            "location": "/learning/angular/wordpress/#using-the-wordpress-api-with-angular",
            "text": "Want to use Foundation for creating my theme  Use Amazon CDN for serving pages. Reduce latency in South Africa  Not to keen on splitting up my theme for Wordpress.",
            "title": "Using the Wordpress API with angular"
        },
        {
            "location": "/learning/angular/wordpress/#resources",
            "text": "de Wordpress themes and angular articles  Wordpress API Angular Client",
            "title": "Resources"
        },
        {
            "location": "/learning/angular/wordpress/#tools",
            "text": "Postman  - Use to explore the Wordpress API  WP REST API Docs",
            "title": "Tools"
        },
        {
            "location": "/learning/angular/wordpress/#notes",
            "text": "Local site:  http://paseo.demo/wp-json/wp/v2/posts  - Access the REST API",
            "title": "Notes"
        }
    ]
}